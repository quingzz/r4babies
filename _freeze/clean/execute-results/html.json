{
  "hash": "56432d498afeba23112395f9699ad4d0",
  "result": {
    "markdown": "# Làm sạch (p2)\n\nBước đầu tiên sau khi đọc được dữ liệu vào R là \"làm sạch\" dữ liệu (clean data). Chúng ta chỉ tiến hành phân tích khi chắc chắn dữ liệu đã \"sạch\" và chính xác.\n\n::: callout-tip\n# Mục tiêu\n\n1.  Hiểu khái niệm dữ liệu gọn gàng\n\n2.  Hiểu cách sử dụng các lệnh join\n\n3.  Học các cách xử lý dữ liệu lỗi\n:::\n\n::: callout-note\n# Trước buổi học {.callout-note}\n\n-   Tải data thực hành\n\n\n{{< downloadthis data/vaccine_data.xlsx dname=\"vaccine_data\" label=\"vaccine_data.xlsx\" type=light >}} {{< downloadthis data/qhpx_hcm.rds dname=\"qhpx_hcm\" label=\"qhpx_hcm.rds\" type=light >}} {{< downloadthis data/life-exp.csv dname=\"life-exp\" label=\"life-exp.csv\" type=light >}}\n\n\n\n-   Tải các package sau: `tidyverse`, `readxl`, `writexl`, `janitor`\n\n-   Và load các package\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(janitor)\nlibrary(tidyverse)\n```\n:::\n\n:::\n\n## Tổng quan quá trình làm sạch dữ liệu\n\nQuá trình làm sach dữ liệu thường bao gồm các bước theo thứ tự sau\n\n-   [ ] Làm sạch tên cột (Từ phần 1: @sec-clean_colnames)\n\n-   [ ] Kiểm tra datatype (Từ phần 1: @sec-update-datatype)\n\n-   [ ] Kiểm tra giá trị\n\n-   [ ] Format bảng theo quy tắc dữ liệu gọn gàng\n\n-   [ ] Nối bảng (nếu cần thiết)\n\n-   [ ] Xử lý các dữ liệu lỗi\n\n## Làm sạch tên cột & kiểm tra datatype\n\nChúng ta sẽ dùng `vaccine_data.xlsx` từ phần trước\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_excel(path = \"data/vaccine_data.xlsx\", sheet = 1)\n```\n:::\n\n\n::: {#tip-colname-coltype .callout-tip}\n## Vì sao cần xử lý tên cột và datatype?\n\n-   Như đã được giới thiệu tại phần 1 (@sec-clean_colnames), các tên cột nên được làm sạch theo các quy tắc của R để tránh gặp lỗi khi chỉnh sửa, trích xuất dữ liệu cột.\n\n-   Các datatype cũng cần được kiểm tra và update vì **mỗi datatype trong R sẽ có các câu lệnh tính toán, phân tích, xử lý khác nhau**\n\n    **VD:**\n\n    -   Lệnh `difftime()` dùng để tính khoảng thời gian giữa 2 mốc thời gian yêu cầu 2 tham số phải theo datatype là Date\n\n    -   Lệnh `sum()` dùng để tính tổng của một dãy số yêu cầu tham số phải là 1 vector numeric\n\n    Dữ liệu không theo đúng datatype thường sẽ gặp ERROR trong R, nhưng cũng có các trường hợp không có ERROR nhưng trả về kết quả không mong muốn.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    # ---- Sử dụng difftime nhưng không chuyển datatype thành Date \n    difftime(\"05/01/2022\", \"03/01/2022\")\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    Time difference of 731 days\n    ```\n    :::\n    \n    ```{.r .cell-code}\n    # ---- So sánh ngày nhưng không chuyển datatype sang Date\n    print(\"25/01/2021\" < \"03/01/2022\")\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    [1] FALSE\n    ```\n    :::\n    \n    ```{.r .cell-code}\n    # ---- Tính tổng nhưng không chuyển datatype sang numeric\n    sum(c(\"1\", \"3\", \"4\"))\n    ```\n    \n    ::: {.cell-output .cell-output-error}\n    ```\n    Error in sum(c(\"1\", \"3\", \"4\")): invalid 'type' (character) of argument\n    ```\n    :::\n    :::\n\n:::\n\n**Dữ liệu trước khi sửa**\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gioitinh\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"ngaysinh\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"huyen\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"xa\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"tinh\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"VGB <24\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"VGB >24\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"VGB_1\"],\"name\":[9],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"VGB_2\"],\"name\":[10],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"VGB_3\"],\"name\":[11],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"VGB_4+\"],\"name\":[12],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"HG_1\"],\"name\":[13],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"HG_2\"],\"name\":[14],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"HG_3\"],\"name\":[15],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"HG_4+\"],\"name\":[16],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"UV_1\"],\"name\":[17],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"UV_2\"],\"name\":[18],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"UV_3\"],\"name\":[19],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"UV_4+\"],\"name\":[20],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"tinhtrang\"],\"name\":[21],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"nam\",\"3\":\"27/02/2024\",\"4\":\"Bình Chánh\",\"5\":\"Phường Bình Hưng Hòa\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"28/02/2024\",\"8\":\"29/02/2024\",\"9\":\"10/03/2024\",\"10\":\"20/03/2024\",\"11\":\"20/03/2024\",\"12\":\"04/04/2024\",\"13\":\"28/02/2024\",\"14\":\"02/03/2024\",\"15\":\"12/03/2024\",\"16\":\"12/03/2024\",\"17\":\"27/02/2024\",\"18\":\"28/02/2024\",\"19\":\"09/03/2024\",\"20\":\"19/03/2024\",\"21\":\"theo dõi\"},{\"1\":\"2\",\"2\":\"nữ\",\"3\":\"06/03/2024\",\"4\":\"Huyện Thạnh Phú\",\"5\":\"Phường 01\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"07/03/2024\",\"8\":\"08/03/2024\",\"9\":\"23/03/2024\",\"10\":\"27/03/2024\",\"11\":\"11/04/2024\",\"12\":\"26/04/2024\",\"13\":\"07/03/2024\",\"14\":\"22/03/2024\",\"15\":\"06/04/2024\",\"16\":\"16/04/2024\",\"17\":\"07/03/2024\",\"18\":\"22/03/2024\",\"19\":\"06/04/2024\",\"20\":\"21/04/2024\",\"21\":\"ngừng theo dõi\"},{\"1\":\"3\",\"2\":\"nữ\",\"3\":\"27/01/2024\",\"4\":\"Thành phố Vĩnh Long\",\"5\":\"Phường Phú Thuận\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"28/01/2024\",\"8\":\"29/01/2024\",\"9\":\"08/02/2024\",\"10\":\"18/02/2024\",\"11\":\"19/02/2024\",\"12\":\"19/02/2024\",\"13\":\"28/01/2024\",\"14\":\"07/02/2024\",\"15\":\"17/02/2024\",\"16\":\"27/02/2024\",\"17\":\"27/01/2024\",\"18\":\"06/02/2024\",\"19\":\"21/02/2024\",\"20\":\"02/03/2024\",\"21\":\"ngừng theo dõi\"},{\"1\":\"4\",\"2\":\"nữ\",\"3\":\"12/02/2024\",\"4\":\"Hóc Môn\",\"5\":\"Xã Đông Thạnh\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"13/02/2024\",\"8\":\"14/02/2024\",\"9\":\"17/02/2024\",\"10\":\"27/02/2024\",\"11\":\"28/02/2024\",\"12\":\"28/02/2024\",\"13\":\"12/02/2024\",\"14\":\"16/02/2024\",\"15\":\"02/03/2024\",\"16\":\"12/03/2024\",\"17\":\"12/02/2024\",\"18\":\"22/02/2024\",\"19\":\"08/03/2024\",\"20\":\"23/03/2024\",\"21\":\"theo dõi\"},{\"1\":\"5\",\"2\":\"nữ\",\"3\":\"21/02/2024\",\"4\":\"Bình Chánh\",\"5\":\"Xã Bình Hưng\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"21/02/2024\",\"8\":\"20/02/2024\",\"9\":\"23/02/2024\",\"10\":\"09/03/2024\",\"11\":\"13/03/2024\",\"12\":\"23/03/2024\",\"13\":\"21/02/2024\",\"14\":\"24/02/2024\",\"15\":\"24/02/2024\",\"16\":\"10/03/2024\",\"17\":\"22/02/2024\",\"18\":\"03/03/2024\",\"19\":\"13/03/2024\",\"20\":\"14/03/2024\",\"21\":\"theo dõi\"},{\"1\":\"6\",\"2\":\"nữ\",\"3\":\"07/03/2024\",\"4\":\"Quận 7\",\"5\":\"Phú Thuận\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"07/03/2024\",\"8\":\"08/03/2024\",\"9\":\"23/03/2024\",\"10\":\"02/04/2024\",\"11\":\"17/04/2024\",\"12\":\"02/05/2024\",\"13\":\"07/03/2024\",\"14\":\"17/03/2024\",\"15\":\"17/03/2024\",\"16\":\"27/03/2024\",\"17\":\"07/03/2024\",\"18\":\"22/03/2024\",\"19\":\"01/04/2024\",\"20\":\"11/04/2024\",\"21\":\"theo dõi\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n```{=html}\n<details>\n  <summary>\n    Làm sạch tên cột\n  </summary>\n```\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df %>% clean_names() %>%  \n  rename(\n    vgb_truoc_24 = vgb_24,\n    vgb_sau_24 = vgb_24_2\n  )\n```\n:::\n\n\nCode tương ứng khi không dùng dấu `%>%`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ---Code không dùng %>%\ndf <- clean_names(df) \ndf <- rename(df, \n    vgb_truoc_24 = vgb_24,\n    vgb_sau_24 = vgb_24_2\n  )\n```\n:::\n\n\n</details>\n\n\n```{=html}\n<details>\n  <summary>\n    Kiểm tra và thay đổi datatype \n  </summary>\n```\n\nNhư đã được giới thiệu trong phần @sec-update-datatype, cần chuyển đổi các cột ngày, cột có giá trị phân loại, giá trị TRUE/FALSE sang đúng datatype để thể hiện rõ hơn ý nghĩa giá trị từng cột cũng như tránh xảy ra lỗi khi sử dụng các lệnh xử lý dữ liệu trong R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --- Điều chỉnh datatype\ndate_cols <- c(\"ngaysinh\", \"vgb_truoc_24\",\"vgb_sau_24\",\"vgb_1\",\"vgb_2\",\"vgb_3\",\"vgb_4\",\"hg_1\",\"hg_2\",\"hg_3\",\"hg_4\",\"uv_1\",\"uv_2\",\"uv_3\",\"uv_4\")\n\ndf <- mutate(df,\n    gioitinh = as.factor(gioitinh),\n    tinhtrang = ifelse(tinhtrang == \"theo dõi\", TRUE, FALSE)\n  ) %>% \n  mutate_at(date_cols, dmy) %>% \n  rename(theodoi = tinhtrang)\n```\n:::\n\n\nCode tương ứng khi không dùng dấu `%>%`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndate_cols <- c(\"ngaysinh\", \"vgb_truoc_24\",\"vgb_sau_24\",\"vgb_1\",\"vgb_2\",\"vgb_3\",\"vgb_4\",\"hg_1\",\"hg_2\",\"hg_3\",\"hg_4\",\"uv_1\",\"uv_2\",\"uv_3\",\"uv_4\")\n\ndf <- mutate(df,\n    gioitinh = as.factor(gioitinh),\n    tinhtrang = ifelse(tinhtrang == \"theo dõi\", TRUE, FALSE)\n  )\ndf <- mutate_at(df, date_cols, dmy) \ndf <- rename(df, theodoi = tinhtrang)\n```\n:::\n\n\n</details>\n\n**Dữ liệu sau khi sửa**\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gioitinh\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"ngaysinh\"],\"name\":[3],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"huyen\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"xa\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"tinh\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"vgb_truoc_24\"],\"name\":[7],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"vgb_sau_24\"],\"name\":[8],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"vgb_1\"],\"name\":[9],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"vgb_2\"],\"name\":[10],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"vgb_3\"],\"name\":[11],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"vgb_4\"],\"name\":[12],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"hg_1\"],\"name\":[13],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"hg_2\"],\"name\":[14],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"hg_3\"],\"name\":[15],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"hg_4\"],\"name\":[16],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"uv_1\"],\"name\":[17],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"uv_2\"],\"name\":[18],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"uv_3\"],\"name\":[19],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"uv_4\"],\"name\":[20],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"theodoi\"],\"name\":[21],\"type\":[\"lgl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"nam\",\"3\":\"2024-02-27\",\"4\":\"Bình Chánh\",\"5\":\"Phường Bình Hưng Hòa\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"2024-02-28\",\"8\":\"2024-02-29\",\"9\":\"2024-03-10\",\"10\":\"2024-03-20\",\"11\":\"2024-03-20\",\"12\":\"2024-04-04\",\"13\":\"2024-02-28\",\"14\":\"2024-03-02\",\"15\":\"2024-03-12\",\"16\":\"2024-03-12\",\"17\":\"2024-02-27\",\"18\":\"2024-02-28\",\"19\":\"2024-03-09\",\"20\":\"2024-03-19\",\"21\":\"TRUE\"},{\"1\":\"2\",\"2\":\"nữ\",\"3\":\"2024-03-06\",\"4\":\"Huyện Thạnh Phú\",\"5\":\"Phường 01\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"2024-03-07\",\"8\":\"2024-03-08\",\"9\":\"2024-03-23\",\"10\":\"2024-03-27\",\"11\":\"2024-04-11\",\"12\":\"2024-04-26\",\"13\":\"2024-03-07\",\"14\":\"2024-03-22\",\"15\":\"2024-04-06\",\"16\":\"2024-04-16\",\"17\":\"2024-03-07\",\"18\":\"2024-03-22\",\"19\":\"2024-04-06\",\"20\":\"2024-04-21\",\"21\":\"FALSE\"},{\"1\":\"3\",\"2\":\"nữ\",\"3\":\"2024-01-27\",\"4\":\"Thành phố Vĩnh Long\",\"5\":\"Phường Phú Thuận\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"2024-01-28\",\"8\":\"2024-01-29\",\"9\":\"2024-02-08\",\"10\":\"2024-02-18\",\"11\":\"2024-02-19\",\"12\":\"2024-02-19\",\"13\":\"2024-01-28\",\"14\":\"2024-02-07\",\"15\":\"2024-02-17\",\"16\":\"2024-02-27\",\"17\":\"2024-01-27\",\"18\":\"2024-02-06\",\"19\":\"2024-02-21\",\"20\":\"2024-03-02\",\"21\":\"FALSE\"},{\"1\":\"4\",\"2\":\"nữ\",\"3\":\"2024-02-12\",\"4\":\"Hóc Môn\",\"5\":\"Xã Đông Thạnh\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"2024-02-13\",\"8\":\"2024-02-14\",\"9\":\"2024-02-17\",\"10\":\"2024-02-27\",\"11\":\"2024-02-28\",\"12\":\"2024-02-28\",\"13\":\"2024-02-12\",\"14\":\"2024-02-16\",\"15\":\"2024-03-02\",\"16\":\"2024-03-12\",\"17\":\"2024-02-12\",\"18\":\"2024-02-22\",\"19\":\"2024-03-08\",\"20\":\"2024-03-23\",\"21\":\"TRUE\"},{\"1\":\"5\",\"2\":\"nữ\",\"3\":\"2024-02-21\",\"4\":\"Bình Chánh\",\"5\":\"Xã Bình Hưng\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"2024-02-21\",\"8\":\"2024-02-20\",\"9\":\"2024-02-23\",\"10\":\"2024-03-09\",\"11\":\"2024-03-13\",\"12\":\"2024-03-23\",\"13\":\"2024-02-21\",\"14\":\"2024-02-24\",\"15\":\"2024-02-24\",\"16\":\"2024-03-10\",\"17\":\"2024-02-22\",\"18\":\"2024-03-03\",\"19\":\"2024-03-13\",\"20\":\"2024-03-14\",\"21\":\"TRUE\"},{\"1\":\"6\",\"2\":\"nữ\",\"3\":\"2024-03-07\",\"4\":\"Quận 7\",\"5\":\"Phú Thuận\",\"6\":\"Thành phố Hồ Chí Minh\",\"7\":\"2024-03-07\",\"8\":\"2024-03-08\",\"9\":\"2024-03-23\",\"10\":\"2024-04-02\",\"11\":\"2024-04-17\",\"12\":\"2024-05-02\",\"13\":\"2024-03-07\",\"14\":\"2024-03-17\",\"15\":\"2024-03-17\",\"16\":\"2024-03-27\",\"17\":\"2024-03-07\",\"18\":\"2024-03-22\",\"19\":\"2024-04-01\",\"20\":\"2024-04-11\",\"21\":\"TRUE\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Kiểm tra giá trị\n\nThường bao gồm các thao tác chính\n\n-   Kiểm tra các giá trị NA\n\n-   Kiểm tra các khoảng giá trị của từng cột/ kiểm tra các giá trị bất thường (outlier)\n\nTrong R có lệnh `summary` để người dùng có thể nhanh chóng kiểm tra các khoảng giá trị và số dữ liệu NA trong từng cột.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id         gioitinh     ngaysinh             huyen          \n Min.   :   1.0   nam:514   Min.   :2024-01-01   Length:1000       \n 1st Qu.: 250.8   nữ :486   1st Qu.:2024-01-25   Class :character  \n Median : 500.5             Median :2024-02-16   Mode  :character  \n Mean   : 500.5             Mean   :2024-02-16                     \n 3rd Qu.: 750.2             3rd Qu.:2024-03-10                     \n Max.   :1000.0             Max.   :2024-04-01                     \n                                                                   \n      xa                tinh            vgb_truoc_24       \n Length:1000        Length:1000        Min.   :0001-01-01  \n Class :character   Class :character   1st Qu.:2024-01-25  \n Mode  :character   Mode  :character   Median :2024-02-17  \n                                       Mean   :2005-10-03  \n                                       3rd Qu.:2024-03-11  \n                                       Max.   :2024-04-02  \n                                       NA's   :9           \n   vgb_sau_24             vgb_1                vgb_2           \n Min.   :0001-01-01   Min.   :0001-01-01   Min.   :0001-01-01  \n 1st Qu.:2024-01-26   1st Qu.:2024-02-05   1st Qu.:2024-02-16  \n Median :2024-02-17   Median :2024-02-27   Median :2024-03-09  \n Mean   :2003-10-11   Mean   :2014-01-01   Mean   :2009-11-18  \n 3rd Qu.:2024-03-11   3rd Qu.:2024-03-22   3rd Qu.:2024-03-31  \n Max.   :2024-04-03   Max.   :2024-04-18   Max.   :2024-05-03  \n NA's   :6            NA's   :4            NA's   :10          \n     vgb_3                vgb_4                 hg_1           \n Min.   :0001-01-01   Min.   :0001-01-01   Min.   :0001-01-01  \n 1st Qu.:2024-02-26   1st Qu.:2024-03-07   1st Qu.:2024-01-26  \n Median :2024-03-19   Median :2024-03-29   Median :2024-02-17  \n Mean   :2011-12-14   Mean   :2012-01-12   Mean   :2007-11-11  \n 3rd Qu.:2024-04-10   3rd Qu.:2024-04-21   3rd Qu.:2024-03-11  \n Max.   :2024-05-18   Max.   :2024-06-02   Max.   :2024-04-02  \n NA's   :10           NA's   :6            NA's   :5           \n      hg_2                 hg_3                 hg_4           \n Min.   :0001-01-01   Min.   :0001-01-01   Min.   :0001-01-01  \n 1st Qu.:2024-02-05   1st Qu.:2024-02-16   1st Qu.:2024-02-26  \n Median :2024-02-27   Median :2024-03-09   Median :2024-03-18  \n Mean   :1999-09-25   Mean   :2009-12-08   Mean   :2016-01-24  \n 3rd Qu.:2024-03-21   3rd Qu.:2024-03-31   3rd Qu.:2024-04-10  \n Max.   :2024-04-17   Max.   :2024-05-01   Max.   :2024-05-16  \n NA's   :6            NA's   :6            NA's   :7           \n      uv_1                 uv_2                 uv_3           \n Min.   :0001-01-01   Min.   :0001-01-01   Min.   :0001-01-01  \n 1st Qu.:2024-01-26   1st Qu.:2024-02-04   1st Qu.:2024-02-15  \n Median :2024-02-16   Median :2024-02-27   Median :2024-03-09  \n Mean   :2017-12-26   Mean   :2013-12-08   Mean   :2009-12-08  \n 3rd Qu.:2024-03-11   3rd Qu.:2024-03-21   3rd Qu.:2024-03-31  \n Max.   :2024-04-02   Max.   :2024-04-17   Max.   :2024-05-02  \n NA's   :12           NA's   :10           NA's   :6           \n      uv_4             theodoi       \n Min.   :0001-01-01   Mode :logical  \n 1st Qu.:2024-02-26   FALSE:504      \n Median :2024-03-19   TRUE :496      \n Mean   :2009-12-24                  \n 3rd Qu.:2024-04-10                  \n Max.   :2024-05-17                  \n NA's   :5                           \n```\n:::\n:::\n\n\n### Giá trị NA\n\n**Giá trị NA** (hay giá trị missing) là các giá trị được bỏ trống\n\n::: callout-tip\n## Vì sao phải xử lý các giá trị NA \n\nTrong R, `NA` là một giá trị đặc biệt khi không thể tính toán hay so sánh với các datatype khác (kết quả luôn trả về `NA`).\n\nVì vậy dữ liệu NA nên được xử lý trước khi thực hiện tính toán hay phân tích với dữ liệu.\\\nVD:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# các phép tính toán khi có NA sẽ trả về NA\nsum(c(1, 2, 3, 4, NA))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\n# khi thống kê với dữ liệu có chứa NA sẽ trả về NA\nmax(c(1, 2, 3, 4, NA))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n\n:::\n\n### Outlier\n\n**Outlier** là các giá trị khác đáng kể so với các giá trị khác\n\nCách xác định outlier đơn giản nhất là bằng cách sử dụng thuật toán Tukey. Trong đó, outlier được định nghĩa là:\n\n-   Các giá trị lớn hơn `Q3 + (Q3 - Q1)*1.5`\n\n-   Các giá trị nhỏ hơn `Q1 - (Q3 - Q1)*1.5`\n\n::: callout-note\n## Vì sao phải xử lý outlier {.callout-note}\n\n-   Về mặt quản lý dữ liệu, outlier thường là dấu hiệu cho thấy dữ liệu được nhập có thể là dữ liệu sai cần được kiểm tra lại\n\n-   Về mặt phân tích, outlier có thể gây ra độ lệch rất lớn trong một kết quả thống kê\n\nVD:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ---- ví dụ dãy số có outlier\nexample_outlier <- c(-10, 1,3,4,1,2,5,20)\n\n# --- kết quả tính mean khi có outlier\nmean(example_outlier)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.25\n```\n:::\n\n```{.r .cell-code}\n# --- kết quả tính mean sau khi lọc outlier theo công thức xác định outlier\nq1 <- quantile(example_outlier, 0.25)\nq3 <- quantile(example_outlier, 0.75)\niqr <- IQR(example_outlier)\nfilter_outlier <- example_outlier[(example_outlier > q1 - iqr*1.5)&(example_outlier < q3 + iqr*1.5)]\nmean(filter_outlier)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.666667\n```\n:::\n:::\n\n:::\n\nĐể nhanh chóng kiểm tra dữ liệu có chứa outlier hay không, ta có thể sử dụng `boxplot` để tìm các điểm giá trị cách xa các giá trị còn lại\n\n![](img/clean_p2/boxplot.png){width=\"445\"}\n\n**Ví dụ:** sử dụng boxplot để kiểm tra outlier của cột `vgb_1`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(df$vgb_1)\n```\n\n::: {.cell-output-display}\n![](clean_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# xem các giá trị được phân loại là outlier\nboxplot(df$vgb_1, plot=FALSE)$out\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"0001-01-01\" \"0001-01-01\" \"0001-01-01\" \"0001-01-01\" \"0001-01-01\"\n```\n:::\n:::\n\n\n### Kiểm tra giá trị giữa các cột\n\nNgoài ra, tuỳ vào bộ dữ liệu, có thể cần kiểm tra giá trị giữa các cột (VD: trong dữ liệu tiêm chủng có thể có mũi 2 trùng hoặc trước ngày tiêm mũi 1)\n\n**Ví dụ**: lọc các hàng có ngày tiêm không đúng thứ tự\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --- Kiểm tra các mũi vgb\nincorrect_vgb <- df %>% \n  filter(\n  (vgb_truoc_24 > vgb_sau_24) | (vgb_sau_24 > vgb_1) | (vgb_1 > vgb_2) | (vgb_2 > vgb_3) | (vgb_3 > vgb_4) \n  ) %>% \n  select(vgb_truoc_24, vgb_sau_24, vgb_1, vgb_2, vgb_3, vgb_4) \nincorrect_vgb\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"vgb_truoc_24\"],\"name\":[1],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"vgb_sau_24\"],\"name\":[2],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"vgb_1\"],\"name\":[3],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"vgb_2\"],\"name\":[4],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"vgb_3\"],\"name\":[5],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"vgb_4\"],\"name\":[6],\"type\":[\"date\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2024-02-21\",\"2\":\"2024-02-20\",\"3\":\"2024-02-23\",\"4\":\"2024-03-09\",\"5\":\"2024-03-13\",\"6\":\"2024-03-23\"},{\"1\":\"2024-03-19\",\"2\":\"2024-03-20\",\"3\":\"2024-03-30\",\"4\":\"2024-04-14\",\"5\":\"2024-04-29\",\"6\":\"2024-04-27\"},{\"1\":\"2024-02-26\",\"2\":\"2024-02-27\",\"3\":\"2024-02-25\",\"4\":\"2024-03-11\",\"5\":\"2024-03-11\",\"6\":\"2024-03-26\"},{\"1\":\"2024-01-09\",\"2\":\"2024-01-10\",\"3\":\"2024-01-25\",\"4\":\"2024-02-09\",\"5\":\"2024-02-07\",\"6\":\"2024-02-22\"},{\"1\":\"2024-01-04\",\"2\":\"2024-01-05\",\"3\":\"2024-01-20\",\"4\":\"0001-01-01\",\"5\":\"2024-02-08\",\"6\":\"2024-02-18\"},{\"1\":\"2024-04-01\",\"2\":\"2024-04-02\",\"3\":\"2024-04-17\",\"4\":\"0001-01-01\",\"5\":\"2024-05-12\",\"6\":\"2024-05-27\"},{\"1\":\"2024-03-05\",\"2\":\"2024-03-06\",\"3\":\"2024-03-16\",\"4\":\"2024-03-15\",\"5\":\"2024-03-25\",\"6\":\"2024-04-09\"},{\"1\":\"2024-01-14\",\"2\":\"2024-01-15\",\"3\":\"2024-01-30\",\"4\":\"2024-01-29\",\"5\":\"2024-02-08\",\"6\":\"2024-02-18\"},{\"1\":\"2024-01-07\",\"2\":\"2024-01-08\",\"3\":\"2024-01-18\",\"4\":\"2024-01-28\",\"5\":\"2024-01-27\",\"6\":\"2024-02-11\"},{\"1\":\"2024-01-06\",\"2\":\"2024-01-07\",\"3\":\"2024-01-22\",\"4\":\"2024-02-06\",\"5\":\"0001-01-01\",\"6\":\"0001-01-01\"},{\"1\":\"2024-02-07\",\"2\":\"2024-02-06\",\"3\":\"2024-02-16\",\"4\":\"2024-02-20\",\"5\":\"2024-03-01\",\"6\":\"2024-03-16\"},{\"1\":\"2024-02-16\",\"2\":\"0001-01-01\",\"3\":\"2024-02-27\",\"4\":\"2024-03-13\",\"5\":\"2024-03-17\",\"6\":\"2024-03-27\"},{\"1\":\"2024-02-17\",\"2\":\"2024-02-18\",\"3\":\"2024-02-28\",\"4\":\"2024-02-27\",\"5\":\"2024-03-08\",\"6\":\"2024-03-23\"},{\"1\":\"2024-02-01\",\"2\":\"2024-02-02\",\"3\":\"2024-01-31\",\"4\":\"2024-02-04\",\"5\":\"2024-02-07\",\"6\":\"2024-02-17\"},{\"1\":\"2024-01-30\",\"2\":\"0001-01-01\",\"3\":\"2024-02-10\",\"4\":\"2024-02-20\",\"5\":\"2024-03-06\",\"6\":\"2024-03-21\"},{\"1\":\"2024-01-22\",\"2\":\"2024-01-23\",\"3\":\"2024-01-21\",\"4\":\"2024-01-31\",\"5\":\"2024-02-03\",\"6\":\"2024-02-18\"},{\"1\":\"2024-03-29\",\"2\":\"2024-03-30\",\"3\":\"2024-04-03\",\"4\":\"2024-04-13\",\"5\":\"2024-04-11\",\"6\":\"2024-04-11\"},{\"1\":\"2024-02-28\",\"2\":\"2024-02-28\",\"3\":\"2024-03-14\",\"4\":\"2024-03-29\",\"5\":\"2024-04-08\",\"6\":\"2024-04-07\"},{\"1\":\"2024-03-02\",\"2\":\"2024-03-03\",\"3\":\"2024-03-01\",\"4\":\"2024-03-11\",\"5\":\"2024-03-26\",\"6\":\"2024-03-29\"},{\"1\":\"2024-03-07\",\"2\":\"2024-03-08\",\"3\":\"2024-03-23\",\"4\":\"2024-04-07\",\"5\":\"2024-04-05\",\"6\":\"2024-04-03\"},{\"1\":\"2024-03-18\",\"2\":\"2024-03-19\",\"3\":\"0001-01-01\",\"4\":\"0001-01-01\",\"5\":\"2024-04-28\",\"6\":\"2024-05-13\"},{\"1\":\"0001-01-01\",\"2\":\"2024-02-12\",\"3\":\"2024-02-22\",\"4\":\"2024-02-23\",\"5\":\"0001-01-01\",\"6\":\"2024-03-08\"},{\"1\":\"2024-03-15\",\"2\":\"2024-03-16\",\"3\":\"2024-03-15\",\"4\":\"2024-03-25\",\"5\":\"2024-04-04\",\"6\":\"2024-04-19\"},{\"1\":\"2024-03-30\",\"2\":\"2024-03-31\",\"3\":\"2024-04-15\",\"4\":\"2024-04-14\",\"5\":\"2024-04-24\",\"6\":\"2024-05-04\"},{\"1\":\"2024-03-27\",\"2\":\"2024-03-28\",\"3\":\"2024-04-01\",\"4\":\"2024-03-30\",\"5\":\"2024-04-14\",\"6\":\"2024-04-29\"},{\"1\":\"2024-01-21\",\"2\":\"2024-01-22\",\"3\":\"2024-02-06\",\"4\":\"2024-02-16\",\"5\":\"2024-02-19\",\"6\":\"2024-02-17\"},{\"1\":\"2024-01-19\",\"2\":\"2024-01-18\",\"3\":\"2024-02-02\",\"4\":\"2024-02-03\",\"5\":\"2024-02-01\",\"6\":\"2024-02-01\"},{\"1\":\"0001-01-01\",\"2\":\"2024-01-07\",\"3\":\"2024-01-22\",\"4\":\"0001-01-01\",\"5\":\"2024-02-16\",\"6\":\"0001-01-01\"},{\"1\":\"0001-01-01\",\"2\":\"2024-01-26\",\"3\":\"0001-01-01\",\"4\":\"0001-01-01\",\"5\":\"2024-03-06\",\"6\":\"2024-03-21\"},{\"1\":\"2024-02-25\",\"2\":\"2024-02-26\",\"3\":\"2024-02-26\",\"4\":\"2024-03-01\",\"5\":\"2024-03-16\",\"6\":\"2024-03-14\"},{\"1\":\"2024-02-15\",\"2\":\"2024-02-14\",\"3\":\"2024-02-24\",\"4\":\"2024-03-05\",\"5\":\"2024-03-15\",\"6\":\"2024-03-15\"},{\"1\":\"2024-02-02\",\"2\":\"2024-02-03\",\"3\":\"2024-02-04\",\"4\":\"0001-01-01\",\"5\":\"2024-02-29\",\"6\":\"0001-01-01\"},{\"1\":\"0001-01-01\",\"2\":\"0001-01-01\",\"3\":\"2024-03-28\",\"4\":\"2024-03-31\",\"5\":\"0001-01-01\",\"6\":\"2024-04-20\"},{\"1\":\"2024-01-09\",\"2\":\"2024-01-10\",\"3\":\"2024-01-20\",\"4\":\"2024-01-18\",\"5\":\"2024-01-28\",\"6\":\"2024-02-12\"},{\"1\":\"2024-04-02\",\"2\":\"0001-01-01\",\"3\":\"2024-04-13\",\"4\":\"2024-04-23\",\"5\":\"0001-01-01\",\"6\":\"2024-05-07\"},{\"1\":\"2024-02-01\",\"2\":\"2024-01-31\",\"3\":\"2024-02-04\",\"4\":\"2024-02-19\",\"5\":\"2024-03-05\",\"6\":\"2024-03-15\"},{\"1\":\"2024-02-11\",\"2\":\"2024-02-12\",\"3\":\"0001-01-01\",\"4\":\"2024-02-16\",\"5\":\"2024-03-02\",\"6\":\"0001-01-01\"},{\"1\":\"2024-01-23\",\"2\":\"2024-01-22\",\"3\":\"2024-01-26\",\"4\":\"2024-02-05\",\"5\":\"2024-02-15\",\"6\":\"2024-03-01\"},{\"1\":\"2024-01-29\",\"2\":\"2024-01-28\",\"3\":\"2024-02-07\",\"4\":\"2024-02-17\",\"5\":\"2024-03-03\",\"6\":\"2024-03-18\"},{\"1\":\"2024-03-24\",\"2\":\"2024-03-25\",\"3\":\"2024-04-04\",\"4\":\"2024-04-14\",\"5\":\"2024-04-29\",\"6\":\"2024-04-28\"},{\"1\":\"2024-01-18\",\"2\":\"2024-01-17\",\"3\":\"2024-02-01\",\"4\":\"2024-02-11\",\"5\":\"2024-02-26\",\"6\":\"2024-03-07\"},{\"1\":\"2024-02-15\",\"2\":\"2024-02-16\",\"3\":\"2024-02-19\",\"4\":\"2024-02-18\",\"5\":\"2024-03-04\",\"6\":\"2024-03-19\"},{\"1\":\"2024-03-11\",\"2\":\"2024-03-12\",\"3\":\"2024-03-10\",\"4\":\"2024-03-20\",\"5\":\"2024-04-04\",\"6\":\"2024-04-14\"},{\"1\":\"2024-02-13\",\"2\":\"2024-02-14\",\"3\":\"2024-02-29\",\"4\":\"2024-03-15\",\"5\":\"2024-03-13\",\"6\":\"2024-03-28\"},{\"1\":\"2024-03-18\",\"2\":\"2024-03-19\",\"3\":\"2024-03-29\",\"4\":\"2024-04-13\",\"5\":\"2024-04-14\",\"6\":\"2024-04-13\"},{\"1\":\"2024-03-04\",\"2\":\"2024-03-05\",\"3\":\"2024-03-15\",\"4\":\"2024-03-13\",\"5\":\"2024-03-14\",\"6\":\"2024-03-18\"},{\"1\":\"2024-02-05\",\"2\":\"2024-02-05\",\"3\":\"2024-02-03\",\"4\":\"2024-02-13\",\"5\":\"0001-01-01\",\"6\":\"2024-03-02\"},{\"1\":\"2024-03-14\",\"2\":\"0001-01-01\",\"3\":\"2024-03-30\",\"4\":\"2024-03-30\",\"5\":\"2024-04-14\",\"6\":\"2024-04-29\"},{\"1\":\"2024-03-15\",\"2\":\"2024-03-16\",\"3\":\"2024-03-14\",\"4\":\"2024-03-24\",\"5\":\"2024-03-25\",\"6\":\"2024-04-04\"},{\"1\":\"2024-02-24\",\"2\":\"2024-02-25\",\"3\":\"2024-02-24\",\"4\":\"2024-03-10\",\"5\":\"2024-03-14\",\"6\":\"2024-03-24\"},{\"1\":\"2024-03-09\",\"2\":\"2024-03-10\",\"3\":\"2024-03-09\",\"4\":\"2024-03-19\",\"5\":\"2024-03-29\",\"6\":\"2024-04-08\"},{\"1\":\"2024-01-16\",\"2\":\"2024-01-15\",\"3\":\"2024-01-16\",\"4\":\"2024-01-26\",\"5\":\"2024-02-05\",\"6\":\"2024-02-05\"},{\"1\":\"2024-02-13\",\"2\":\"2024-02-14\",\"3\":\"2024-02-13\",\"4\":\"2024-02-14\",\"5\":\"2024-02-29\",\"6\":\"2024-03-10\"},{\"1\":\"0001-01-01\",\"2\":\"2024-01-10\",\"3\":\"2024-01-08\",\"4\":\"2024-01-09\",\"5\":\"2024-01-24\",\"6\":\"2024-02-03\"},{\"1\":\"2024-02-05\",\"2\":\"0001-01-01\",\"3\":\"2024-02-21\",\"4\":\"2024-03-07\",\"5\":\"2024-03-17\",\"6\":\"2024-03-27\"},{\"1\":\"2024-02-18\",\"2\":\"2024-02-19\",\"3\":\"2024-02-18\",\"4\":\"2024-03-04\",\"5\":\"2024-03-19\",\"6\":\"2024-04-03\"},{\"1\":\"2024-03-28\",\"2\":\"2024-03-29\",\"3\":\"0001-01-01\",\"4\":\"0001-01-01\",\"5\":\"2024-04-09\",\"6\":\"2024-04-19\"},{\"1\":\"2024-01-14\",\"2\":\"2024-01-14\",\"3\":\"2024-01-12\",\"4\":\"2024-01-22\",\"5\":\"2024-01-21\",\"6\":\"2024-01-31\"},{\"1\":\"2024-03-12\",\"2\":\"2024-03-11\",\"3\":\"2024-03-26\",\"4\":\"2024-04-10\",\"5\":\"2024-04-20\",\"6\":\"2024-05-05\"},{\"1\":\"2024-02-02\",\"2\":\"2024-02-03\",\"3\":\"2024-02-18\",\"4\":\"2024-02-18\",\"5\":\"2024-02-17\",\"6\":\"2024-02-27\"},{\"1\":\"2024-01-18\",\"2\":\"0001-01-01\",\"3\":\"2024-01-29\",\"4\":\"2024-02-02\",\"5\":\"2024-02-17\",\"6\":\"2024-02-27\"},{\"1\":\"2024-03-02\",\"2\":\"2024-03-03\",\"3\":\"2024-03-18\",\"4\":\"2024-04-02\",\"5\":\"2024-04-03\",\"6\":\"2024-04-01\"},{\"1\":\"2024-01-18\",\"2\":\"2024-01-19\",\"3\":\"2024-01-20\",\"4\":\"2024-01-30\",\"5\":\"2024-01-28\",\"6\":\"2024-02-07\"},{\"1\":\"2024-02-26\",\"2\":\"0001-01-01\",\"3\":\"0001-01-01\",\"4\":\"2024-03-09\",\"5\":\"2024-03-19\",\"6\":\"2024-03-19\"},{\"1\":\"2024-03-14\",\"2\":\"2024-03-14\",\"3\":\"2024-03-29\",\"4\":\"2024-04-08\",\"5\":\"0001-01-01\",\"6\":\"0001-01-01\"},{\"1\":\"2024-02-08\",\"2\":\"2024-02-07\",\"3\":\"2024-02-17\",\"4\":\"2024-02-20\",\"5\":\"2024-02-20\",\"6\":\"2024-03-06\"},{\"1\":\"2024-01-30\",\"2\":\"2024-01-31\",\"3\":\"2024-02-10\",\"4\":\"2024-02-14\",\"5\":\"2024-02-29\",\"6\":\"2024-02-28\"},{\"1\":\"2024-03-09\",\"2\":\"2024-03-10\",\"3\":\"2024-03-25\",\"4\":\"2024-03-23\",\"5\":\"2024-04-02\",\"6\":\"2024-04-17\"},{\"1\":\"2024-02-16\",\"2\":\"2024-02-16\",\"3\":\"2024-03-02\",\"4\":\"2024-03-17\",\"5\":\"2024-03-16\",\"6\":\"2024-03-31\"},{\"1\":\"2024-01-29\",\"2\":\"2024-01-30\",\"3\":\"2024-01-29\",\"4\":\"2024-02-08\",\"5\":\"2024-02-23\",\"6\":\"2024-02-27\"},{\"1\":\"2024-03-17\",\"2\":\"2024-03-16\",\"3\":\"2024-03-15\",\"4\":\"2024-03-30\",\"5\":\"2024-04-09\",\"6\":\"2024-04-19\"},{\"1\":\"2024-03-03\",\"2\":\"2024-03-04\",\"3\":\"2024-03-08\",\"4\":\"2024-03-08\",\"5\":\"2024-03-06\",\"6\":\"2024-03-21\"},{\"1\":\"2024-01-13\",\"2\":\"2024-01-14\",\"3\":\"2024-01-24\",\"4\":\"2024-02-08\",\"5\":\"2024-02-07\",\"6\":\"2024-02-17\"},{\"1\":\"2024-02-15\",\"2\":\"2024-02-16\",\"3\":\"2024-03-02\",\"4\":\"2024-03-12\",\"5\":\"2024-03-10\",\"6\":\"2024-03-20\"},{\"1\":\"2024-02-08\",\"2\":\"2024-02-08\",\"3\":\"2024-02-11\",\"4\":\"2024-02-09\",\"5\":\"2024-02-24\",\"6\":\"2024-03-05\"},{\"1\":\"2024-04-01\",\"2\":\"2024-04-02\",\"3\":\"2024-04-12\",\"4\":\"2024-04-27\",\"5\":\"2024-05-07\",\"6\":\"2024-05-05\"},{\"1\":\"2024-02-06\",\"2\":\"0001-01-01\",\"3\":\"2024-02-17\",\"4\":\"2024-02-27\",\"5\":\"2024-03-13\",\"6\":\"2024-03-28\"},{\"1\":\"2024-02-27\",\"2\":\"2024-02-28\",\"3\":\"2024-03-09\",\"4\":\"2024-03-24\",\"5\":\"2024-04-03\",\"6\":\"2024-04-02\"},{\"1\":\"2024-02-26\",\"2\":\"2024-02-27\",\"3\":\"2024-03-08\",\"4\":\"2024-03-12\",\"5\":\"2024-03-27\",\"6\":\"0001-01-01\"},{\"1\":\"2024-01-25\",\"2\":\"2024-01-26\",\"3\":\"2024-02-05\",\"4\":\"2024-02-20\",\"5\":\"2024-03-01\",\"6\":\"2024-02-28\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# --- Kiểm tra các mũi ho gà\nincorrect_hg <- df %>% \n  filter(\n  (hg_1 > hg_2) | (hg_2 > hg_3) | (hg_3 > hg_4)) %>% \n  select(hg_1, hg_2, hg_3, hg_4)\nincorrect_hg\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"hg_1\"],\"name\":[1],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"hg_2\"],\"name\":[2],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"hg_3\"],\"name\":[3],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"hg_4\"],\"name\":[4],\"type\":[\"date\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2024-01-04\",\"2\":\"0001-01-01\",\"3\":\"2024-01-22\",\"4\":\"2024-02-01\"},{\"1\":\"0001-01-01\",\"2\":\"2024-01-21\",\"3\":\"2024-02-05\",\"4\":\"0001-01-01\"},{\"1\":\"2024-03-14\",\"2\":\"2024-03-24\",\"3\":\"2024-04-08\",\"4\":\"2024-04-07\"},{\"1\":\"2024-01-16\",\"2\":\"2024-01-26\",\"3\":\"2024-02-10\",\"4\":\"2024-02-09\"},{\"1\":\"2024-02-10\",\"2\":\"0001-01-01\",\"3\":\"2024-03-11\",\"4\":\"2024-03-26\"},{\"1\":\"2024-02-17\",\"2\":\"2024-02-27\",\"3\":\"2024-03-13\",\"4\":\"2024-03-12\"},{\"1\":\"2024-03-16\",\"2\":\"2024-03-31\",\"3\":\"2024-03-29\",\"4\":\"2024-04-08\"},{\"1\":\"2024-03-16\",\"2\":\"2024-03-20\",\"3\":\"2024-04-04\",\"4\":\"2024-04-02\"},{\"1\":\"2024-01-15\",\"2\":\"2024-01-25\",\"3\":\"2024-02-04\",\"4\":\"2024-02-02\"},{\"1\":\"2024-01-02\",\"2\":\"2024-01-12\",\"3\":\"0001-01-01\",\"4\":\"2024-01-20\"},{\"1\":\"2024-02-27\",\"2\":\"2024-03-13\",\"3\":\"0001-01-01\",\"4\":\"2024-04-07\"},{\"1\":\"2024-03-25\",\"2\":\"2024-04-09\",\"3\":\"2024-04-08\",\"4\":\"2024-04-11\"},{\"1\":\"2024-03-08\",\"2\":\"2024-03-12\",\"3\":\"2024-03-10\",\"4\":\"2024-03-14\"},{\"1\":\"2024-03-31\",\"2\":\"2024-04-10\",\"3\":\"2024-04-20\",\"4\":\"2024-04-18\"},{\"1\":\"2024-01-25\",\"2\":\"0001-01-01\",\"3\":\"2024-02-19\",\"4\":\"<NA>\"},{\"1\":\"2024-03-10\",\"2\":\"2024-03-08\",\"3\":\"2024-03-12\",\"4\":\"2024-03-27\"},{\"1\":\"2024-03-18\",\"2\":\"2024-04-02\",\"3\":\"0001-01-01\",\"4\":\"2024-04-27\"},{\"1\":\"2024-03-14\",\"2\":\"2024-03-24\",\"3\":\"2024-04-03\",\"4\":\"2024-04-02\"},{\"1\":\"2024-03-02\",\"2\":\"2024-03-17\",\"3\":\"2024-03-16\",\"4\":\"2024-03-26\"},{\"1\":\"2024-03-27\",\"2\":\"2024-03-26\",\"3\":\"2024-03-27\",\"4\":\"2024-04-11\"},{\"1\":\"2024-02-10\",\"2\":\"0001-01-01\",\"3\":\"2024-03-01\",\"4\":\"2024-03-11\"},{\"1\":\"2024-02-22\",\"2\":\"2024-03-08\",\"3\":\"2024-03-23\",\"4\":\"2024-03-22\"},{\"1\":\"2024-03-11\",\"2\":\"2024-03-26\",\"3\":\"2024-04-10\",\"4\":\"2024-04-09\"},{\"1\":\"2024-01-09\",\"2\":\"0001-01-01\",\"3\":\"2024-02-03\",\"4\":\"2024-02-18\"},{\"1\":\"2024-01-13\",\"2\":\"0001-01-01\",\"3\":\"0001-01-01\",\"4\":\"2024-02-27\"},{\"1\":\"2024-03-28\",\"2\":\"2024-04-12\",\"3\":\"2024-04-27\",\"4\":\"2024-04-25\"},{\"1\":\"2024-02-25\",\"2\":\"2024-02-24\",\"3\":\"2024-03-10\",\"4\":\"2024-03-20\"},{\"1\":\"2024-03-03\",\"2\":\"0001-01-01\",\"3\":\"2024-03-23\",\"4\":\"2024-04-07\"},{\"1\":\"2024-03-05\",\"2\":\"2024-03-08\",\"3\":\"2024-03-18\",\"4\":\"2024-03-17\"},{\"1\":\"2024-02-27\",\"2\":\"2024-03-13\",\"3\":\"2024-03-13\",\"4\":\"0001-01-01\"},{\"1\":\"2024-01-09\",\"2\":\"2024-01-24\",\"3\":\"0001-01-01\",\"4\":\"2024-02-12\"},{\"1\":\"2024-02-10\",\"2\":\"0001-01-01\",\"3\":\"0001-01-01\",\"4\":\"2024-03-21\"},{\"1\":\"2024-02-06\",\"2\":\"0001-01-01\",\"3\":\"2024-02-10\",\"4\":\"2024-02-11\"},{\"1\":\"2024-01-13\",\"2\":\"0001-01-01\",\"3\":\"2024-01-29\",\"4\":\"2024-02-08\"},{\"1\":\"2024-03-28\",\"2\":\"0001-01-01\",\"3\":\"2024-04-22\",\"4\":\"0001-01-01\"},{\"1\":\"2024-01-18\",\"2\":\"2024-02-02\",\"3\":\"0001-01-01\",\"4\":\"2024-03-03\"},{\"1\":\"2024-03-03\",\"2\":\"2024-03-18\",\"3\":\"2024-03-16\",\"4\":\"2024-03-26\"},{\"1\":\"0001-01-01\",\"2\":\"2024-03-12\",\"3\":\"2024-03-27\",\"4\":\"0001-01-01\"},{\"1\":\"2024-03-19\",\"2\":\"2024-04-03\",\"3\":\"2024-04-01\",\"4\":\"2024-04-11\"},{\"1\":\"2024-02-08\",\"2\":\"2024-02-06\",\"3\":\"2024-02-16\",\"4\":\"2024-02-26\"},{\"1\":\"2024-03-16\",\"2\":\"2024-03-20\",\"3\":\"2024-03-18\",\"4\":\"2024-04-02\"},{\"1\":\"2024-02-19\",\"2\":\"2024-03-05\",\"3\":\"2024-03-15\",\"4\":\"2024-03-14\"},{\"1\":\"2024-02-27\",\"2\":\"0001-01-01\",\"3\":\"2024-03-23\",\"4\":\"2024-04-02\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# --- Kiểm tra các mũi uốn ván\nincorrect_uv <- df %>% \n  filter(\n  (uv_1 > uv_2) | (uv_2 > uv_3) | (uv_3 > uv_4) )%>% \n  select(uv_1, uv_2, uv_3, uv_4)\nincorrect_uv\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"uv_1\"],\"name\":[1],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"uv_2\"],\"name\":[2],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"uv_3\"],\"name\":[3],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"uv_4\"],\"name\":[4],\"type\":[\"date\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2024-04-01\",\"2\":\"0001-01-01\",\"3\":\"0001-01-01\",\"4\":\"2024-05-06\"},{\"1\":\"2024-01-03\",\"2\":\"2024-01-18\",\"3\":\"2024-01-19\",\"4\":\"0001-01-01\"},{\"1\":\"2024-02-03\",\"2\":\"2024-02-13\",\"3\":\"2024-02-28\",\"4\":\"2024-02-26\"},{\"1\":\"2024-02-17\",\"2\":\"2024-03-03\",\"3\":\"2024-03-01\",\"4\":\"2024-03-11\"},{\"1\":\"2024-02-16\",\"2\":\"0001-01-01\",\"3\":\"2024-03-12\",\"4\":\"2024-03-22\"},{\"1\":\"2024-02-25\",\"2\":\"2024-03-11\",\"3\":\"2024-03-26\",\"4\":\"2024-03-25\"},{\"1\":\"2024-03-30\",\"2\":\"2024-03-28\",\"3\":\"2024-04-07\",\"4\":\"2024-04-17\"},{\"1\":\"2024-04-01\",\"2\":\"2024-03-31\",\"3\":\"2024-04-10\",\"4\":\"2024-04-25\"},{\"1\":\"2024-02-10\",\"2\":\"2024-02-20\",\"3\":\"0001-01-01\",\"4\":\"2024-03-02\"},{\"1\":\"2024-03-08\",\"2\":\"2024-03-23\",\"3\":\"2024-04-02\",\"4\":\"2024-04-01\"},{\"1\":\"2024-02-05\",\"2\":\"2024-02-03\",\"3\":\"2024-02-04\",\"4\":\"2024-02-07\"},{\"1\":\"2024-03-16\",\"2\":\"2024-03-14\",\"3\":\"2024-03-14\",\"4\":\"2024-03-24\"},{\"1\":\"2024-01-06\",\"2\":\"2024-01-16\",\"3\":\"2024-01-26\",\"4\":\"0001-01-01\"},{\"1\":\"2024-01-25\",\"2\":\"2024-02-09\",\"3\":\"0001-01-01\",\"4\":\"0001-01-01\"},{\"1\":\"2024-02-02\",\"2\":\"2024-02-17\",\"3\":\"2024-03-03\",\"4\":\"0001-01-01\"},{\"1\":\"2024-01-14\",\"2\":\"2024-01-24\",\"3\":\"2024-02-08\",\"4\":\"2024-02-07\"},{\"1\":\"2024-02-13\",\"2\":\"2024-02-28\",\"3\":\"2024-02-26\",\"4\":\"2024-02-27\"},{\"1\":\"2024-01-27\",\"2\":\"2024-02-11\",\"3\":\"2024-02-12\",\"4\":\"2024-02-11\"},{\"1\":\"2024-03-09\",\"2\":\"2024-03-07\",\"3\":\"2024-03-17\",\"4\":\"2024-04-01\"},{\"1\":\"2024-02-13\",\"2\":\"2024-02-16\",\"3\":\"2024-02-15\",\"4\":\"2024-02-25\"},{\"1\":\"2024-01-12\",\"2\":\"2024-01-15\",\"3\":\"0001-01-01\",\"4\":\"2024-01-25\"},{\"1\":\"2024-02-07\",\"2\":\"2024-02-22\",\"3\":\"2024-03-08\",\"4\":\"2024-03-07\"},{\"1\":\"2024-01-27\",\"2\":\"2024-02-06\",\"3\":\"2024-02-05\",\"4\":\"2024-02-15\"},{\"1\":\"2024-02-15\",\"2\":\"2024-02-25\",\"3\":\"2024-02-25\",\"4\":\"0001-01-01\"},{\"1\":\"2024-03-09\",\"2\":\"2024-03-07\",\"3\":\"2024-03-17\",\"4\":\"2024-03-27\"},{\"1\":\"2024-02-27\",\"2\":\"0001-01-01\",\"3\":\"2024-03-23\",\"4\":\"2024-04-02\"},{\"1\":\"2024-02-06\",\"2\":\"2024-02-21\",\"3\":\"0001-01-01\",\"4\":\"2024-03-17\"},{\"1\":\"0001-01-01\",\"2\":\"2024-02-02\",\"3\":\"2024-02-17\",\"4\":\"0001-01-01\"},{\"1\":\"2024-02-20\",\"2\":\"2024-02-24\",\"3\":\"2024-02-23\",\"4\":\"2024-03-09\"},{\"1\":\"2024-03-15\",\"2\":\"0001-01-01\",\"3\":\"2024-04-03\",\"4\":\"2024-04-03\"},{\"1\":\"2024-04-01\",\"2\":\"2024-04-01\",\"3\":\"2024-03-30\",\"4\":\"2024-04-14\"},{\"1\":\"2024-02-24\",\"2\":\"2024-02-23\",\"3\":\"2024-02-26\",\"4\":\"2024-03-07\"},{\"1\":\"2024-01-26\",\"2\":\"2024-02-10\",\"3\":\"2024-02-08\",\"4\":\"2024-02-18\"},{\"1\":\"2024-01-10\",\"2\":\"2024-01-14\",\"3\":\"2024-01-13\",\"4\":\"2024-01-28\"},{\"1\":\"2024-02-07\",\"2\":\"2024-02-22\",\"3\":\"0001-01-01\",\"4\":\"0001-01-01\"},{\"1\":\"2024-02-26\",\"2\":\"2024-03-07\",\"3\":\"0001-01-01\",\"4\":\"2024-04-01\"},{\"1\":\"2024-02-15\",\"2\":\"2024-03-01\",\"3\":\"2024-03-16\",\"4\":\"2024-03-15\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Data gọn gàng (tidy data)\n\nDữ liệu gọn gàng có các đặc điểm sau:[@wickham2014]\n\n-   Mỗi biến là một cột; mỗi cột là một biến\n-   Mỗi quan sát là một hàng; mỗi hàng là một quan sát\n-   Mỗi giá trị nằm trong một ô; mỗi ô chứa một giá trị duy nhất\n\n### Format bảng\n\nBảng dữ liệu hiện tại chưa tuân theo quy tắc tidy data vì các cột kháng nguyên (`vgb_1`, `vgb_2`, ...) **không phải là biến** và **mỗi hàng đang chứa nhiều quan sát** (ngày tiêm cho các mũi tiêm khác nhau).\n\nHiện tại bảng dữ liệu đang ở `định dạng ngang (wide)`, khi nhiều quan sát của cùng chủ thể (trong VD này là trẻ được tiêm) được lưu trữ trong một hàng duy nhất. Điều này có thể hữu ích cho việc hiển thị, tuy nhiên không lý tưởng cho việc phân tích.\n\nĐể tuân theo quy tắc tidy data, ta cần format bảng dữ liệu sang `định dạng dọc (long)`\n\nĐể format bảng dữ liệu trong R, ta có thể sử dụng các lệnh sau.\n\n-   `pivot_longer()` - chuyển dữ liệu từ dạng ngang sang dọc.\n\n-   `pivot_wider()` - chuyển dữ liệu từ dạng dọc sang ngang.\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncols <- which(str_ends(colnames(df), \"[:digit:]\"))\ndf <- pivot_longer(df,\n      cols = any_of(cols),\n      # đặt tên mới cho biến\n      names_to = \"khangnguyen\",\n      # đặt tên mới cho cột giá trị tương ứng\n      values_to = \"ngaytiem\") \n\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n     id gioitinh ngaysinh   huyen     xa    tinh  theodoi khangnguyen ngaytiem  \n  <dbl> <fct>    <date>     <chr>     <chr> <chr> <lgl>   <chr>       <date>    \n1     1 nam      2024-02-27 Bình Chá… Phườ… Thàn… TRUE    vgb_truoc_… 2024-02-28\n2     1 nam      2024-02-27 Bình Chá… Phườ… Thàn… TRUE    vgb_sau_24  2024-02-29\n3     1 nam      2024-02-27 Bình Chá… Phườ… Thàn… TRUE    vgb_1       2024-03-10\n4     1 nam      2024-02-27 Bình Chá… Phườ… Thàn… TRUE    vgb_2       2024-03-20\n5     1 nam      2024-02-27 Bình Chá… Phườ… Thàn… TRUE    vgb_3       2024-03-20\n6     1 nam      2024-02-27 Bình Chá… Phườ… Thàn… TRUE    vgb_4       2024-04-04\n```\n:::\n:::\n\n\n## Kết hợp dữ liệu\n\nTrong nhiều trường hợp, dữ liệu bị chia thành nhiều bảng khác nhau và để phân tích thì chúng ta phải kết hợp các bảng lại.\n\nĐể nối 2 bảng với nhau trong R, ta sử dụng 1 trong các lệnh join của package `dplyr` sau đây\n\n+--------------+--------------------+-----------------------------------------------------------------------------------------------------+\n| Function     | Công dụng          | GIF minh hoạ                                                                                        |\n+==============+====================+=====================================================================================================+\n| left_join()  | Nối ngoài bên trái | ![](https://github.com/gadenbuie/tidyexplain/blob/main/images/left-join.gif?raw=true){width=\"283\"}  |\n+--------------+--------------------+-----------------------------------------------------------------------------------------------------+\n| right_join() | Nối ngoài bên phải | ![](https://github.com/gadenbuie/tidyexplain/blob/main/images/right-join.gif?raw=true){width=\"282\"} |\n+--------------+--------------------+-----------------------------------------------------------------------------------------------------+\n| inner_join() | Nối trong          | ![](https://github.com/gadenbuie/tidyexplain/blob/main/images/inner-join.gif?raw=true){width=\"281\"} |\n+--------------+--------------------+-----------------------------------------------------------------------------------------------------+\n| full_join()  | Nối ngoài          | ![](https://github.com/gadenbuie/tidyexplain/blob/main/images/full-join.gif?raw=true){width=\"281\"}  |\n+--------------+--------------------+-----------------------------------------------------------------------------------------------------+\n\nĐể sử dụng lệnh join, ta cần cung cấp cho R các thông tin sau:\n\n-   2 bảng cần nối\n\n-   các cột chung để nối bằng lệnh `join_by` (R mặc định nối 2 bảng bằng cột có tên giống nhau)\n\n[Tổng hợp các lệnh join cùng GIF minh hoạ](https://github.com/gadenbuie/tidyexplain/tree/main)\n\n**Ví dụ:**\n\nNối cột để kiểm tra các quận huyện trong bộ dữ liệu và xoá các dữ liệu có Quận/Huyện không hợp lý\n\n\n```{=html}\n<details>\n  <summary>\n    Thông tin về bảng dữ liệu <code>qhpx_hcm.rds</code>\n  </summary>\n```\n\nDùng để đối chiếu và kiểm tra xem các quận huyện trong bộ dữ liệu vaccine có hợp lệ hay không (quận + huyện có tồn tại hay không). Ví dụ một số dữ liệu không hợp lệ \\[ (Quận 6, Xã Bình Trung), (Quận 6, Xã Xuân Bắc), ...\\]\n\nĐồng thời cung cấp tên quận và xã được đồng nhất\n\n***Từ điển biến số***\n\n+-----------+------------------------------------------------------------------------------------------------------------------------------+\n| Tên biến  | Ý nghĩa                                                                                                                      |\n+===========+==============================================================================================================================+\n| qh        | tên quận/huyện xuất hiện trong bộ dữ liệu vaccine                                                                            |\n+-----------+------------------------------------------------------------------------------------------------------------------------------+\n| px        | tên phường/xã xuất hiện trong bộ dữ liệu vaccine                                                                             |\n+-----------+------------------------------------------------------------------------------------------------------------------------------+\n| qh_update | tên quận/huyện được đồng bộ hoá theo format \"Quận *số*\" đối với các quận có tên số hoặc \"*Tên quận*\" đối với quận chữ\\       |\n|           | VD: \"Quận Thủ Đức\"/ \"Thành phố Thủ đức\" được đồng bộ hoá thành \"Thủ Đức\"                                                     |\n+-----------+------------------------------------------------------------------------------------------------------------------------------+\n| px_update | tên phường/xã được đồng bộ hoá theo format \"Phường *số*\" đối với các phường có tên số hoặc \"*Tên phường*\" đối với phường chữ |\n+-----------+------------------------------------------------------------------------------------------------------------------------------+\n| ma_px     | mã cho phường/xã                                                                                                             |\n+-----------+------------------------------------------------------------------------------------------------------------------------------+\n\n</details>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --- Đọc bảng quận huyện phường xã \nqhpx <- readRDS(\"data/qhpx_hcm.rds\")\n\n# --- Nối 2 bảng bằng lệnh left_join\njoined_df <- left_join(df, qhpx, by = join_by(huyen == qh, xa == px)) \n```\n:::\n\n\nSau khi nối bằng `left_join`, các hàng của bảng trái (`df`) không nối được với bảng phải (`qhpx`) sẽ được chèn giá trị `NA`\n\nVì vậy, các hàng có `qh_update` hoặc `px_update` là `NA` sẽ là các hàng có quận/huyện và phường/xã không khợp lệ\n\nTa có thể xem các hàng có lỗi như sau\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_df %>% filter(is.na(qh_update))\n```\n:::\n\n\n## Xử lý dữ liệu\n\nThường bao gồm\n\n-   Chỉnh sửa giá trị dữ liệu\n\n-   Lọc trùng\n\n-   Lọc hàng\n\n#### Chỉnh sửa giá trị dữ liệu\n\nCác trường hợp có thể cần chỉnh sửa lại dữ liệu:\n\n-   Dữ liệu NA (trống)\n\n-   Các dữ liệu dạng TRUE/FALSE được hiển thị bằng cách khác trong dữ liệu gốc (VD: Đánh dấu X hoặc bỏ trống trong file excel)\n\n-   Đồng nhất dữ liệu\n\nMột số lệnh liên quan:\n\n-   `replace_na` thay thế giá trị `NA` bằng giá trị được cung cấp\n\n-   `is.na` chuyển thành định dạng logical, các dữ liệu trống (NA) có giá trị TRUE và ngược lại\n\n-   `ifelse` mã hoá theo điều kiện đơn giản, chỉ có 2 trường hợp khi đáp ứng điều kiện hoặc không.\n\n-   `case_when` mã hóa giá trị cho nhiều trường hợp nhất định\n\nCode mô phỏng sử dụng các lệnh trên\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --- Thay thế các giá trị NA trong cột col1 thành \"default\"\ndf %>% \n  mutate(col1 = replace_na(col1, \"default\"))\n\n# --- Thay thế các giá trị được đánh dấu trong col2 thành TRUE và ngược lại\ndf %>% \n  mutate(col2 = !is.na(col2))\n# Cách làm khác bằng ifelse\ndf %>% \n  mutate(col2 = ifelse(is.na(col2), FALSE, TRUE))\n\n# --- Mã hoá giá trị cho nhiều trường hợp\ndf %>% \n  mutate(col2 = case_when(\n    condition_1 ~ val_1, # nếu col2 thoả điều kiện condition_1 -> gán giá trị val_1\n    condition_2 ~ val_2, # nếu col2 thoả điều kiện condition_2 -> gán giá trị val_2\n    condition_3 ~ val_3, # nếu col2 thoả điều kiện condition_3 -> gán giá trị val_3\n    .default = default_val # trong các trường hợp khác -> gán giá trị default_val\n  ))\n```\n:::\n\n\n**Thực hiện các bước chỉnh sửa giá trị dữ liệu trên bộ dữ liệu vaccine**\n\nĐồng nhất tên quận, phường theo cột `qh_update`, `px_update`\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_df <- joined_df %>% mutate(qh = qh_update, px = px_update)\n```\n:::\n\n\nĐối với trường hợp này, các giá trị `NA` sẽ được loại bỏ ở bước tiếp theo thay vì được thay thế bằng các giá trị khác\n\n#### Lọc hàng\n\nBước làm sạch điển hình sau khi đã làm sạch các cột và các giá trị được mã hóa lại đó là *lọc* bộ dữ liệu cho các hàng cụ thể\n\nĐể lọc hàng, ta dùng lệnh `filter` kết hợp với điều kiện lọc như đã học ở phần @sec-filter-condition\n\nMột số điều kiện lọc:\n\n-   Loại bỏ `NA`: `!is.na()`\n\n-   Lọc bằng số thứ tự hàng\n\n-   Lọc theo giá trị\n\n::: callout-note\n### Lệnh `drop_NA` {.callout-note}\n\n`drop_NA` là lệnh để nhanh chóng drop các hàng có chứa giá trị `NA` (ở bất kỳ cột nào)\\\nNếu tên cột được cung cấp, `drop_NA` chỉ drop các hàng có giá trị `NA` ở các cột được quy định\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --- drop tất cả các hàng có giá trị NA\ndf %>% drop_na()\n\n# --- chỉ drop các hàng có giá trị NA tại cột ngaytiem\ndf %>% drop_na(ngaytiem)\n```\n:::\n\n:::\n\n::: callout-important\n### Lọc hàng khi còn giá trị NA\n\nViệc lọc với điều kiện lớn hơn (\\>) hoặc nhỏ hơn (\\<) một ngày hoặc số có thể loại bỏ bất kỳ hàng nào có giá trị `NA`. Điều này là do `NA` được coi là giá trị lớn hoặc nhỏ vô hạn.\n:::\n\n**Thực hiện lọc giá trị trên dữ liệu vaccine**\n\nLoại bỏ các dữ liệu có qh px không hợp lý\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_df <- joined_df %>% filter(!is.na(qh_update)) \n```\n:::\n\n\nLoại bỏ các dữ liệu có ngày tiêm `NA`\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_df <- joined_df %>% drop_na(ngaytiem)\n```\n:::\n\n\nLoại bỏ các ngày tiêm trước ngày sinh\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_df <- joined_df %>% filter(ngaytiem >= ngaysinh)\n```\n:::\n\n\n#### Lọc trùng\n\nLệnh `distinct` của gói `dplyr` sẽ dữ lại 1 hàng duy nhất trong các hàng có giá trị bị trùng.\n\nLệnh `distinct` mặc định sẽ kiểm tra giá trị của tất cả các cột (2 hàng được đánh giá là trùng khi tất cả các trị của chúng giống nhau).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df %>% distinct()\n```\n:::\n\n\n## Biến đổi cột\n\n### Chọn cột\n\nLệnh `select` của dplyr thường được sử dụng để chọn lọc cột một cách nhanh chóng\n\n-   Để chọn cột, chỉ cần gõ tên các cột được chọn, phân cách bởi dấu `,`\n\n-   Để xoá cột, thêm dấu `-` trước tên cột\n\n**Ví dụ:** xoá các cột `qh_update`, `px_update` sau khi đã chỉnh sửa tên quận, xã\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# --- Xóa cột \njoined_df <- joined_df %>% select(-qh_update, -px_update)\n```\n:::\n\n\n### Tạo cột mới\n\nNhư đã được nhắc đến trong các phần trước, lệnh `mutate` được sử dụng để tạo cột mới hoặc chỉnh sửa giá trị của cột.\n\nMột số argument (tham số) thông dụng của lệnh `mutate`\n\n-   `.before` / `.after` quy định vị trí của cột mới trước hoặc sau cột được chỉ định\n\n-   `.keep` quy định các cột được giữ lại sau lệnh `mutate`\n\n    -   `\"all\"` giữ lại tất cả các cột gốc (default)\n\n    -   `\"none\"` không giữ lại các cột gốc\n\n    -   `\"used\"` giữ lại các cột được sử dụng trong `mutate`\n\n    -   `\"unused\"` giữ lại các cột [không]{.underline} được sử dụng\n\n**VD**: tạo cột mới tên qhpx kết hợp cột `huyen`, `xa`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  mutate(\n    # tạo cột mới kết hợp quận và phường\n    qhpx = str_glue(\"{huyen}_{xa}\"),\n    .keep = \"used\", # giữ các cột được sử dụng\n    .after = xa # cột được tạo sau cột xa\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 14,000 × 3\n   huyen      xa                   qhpx                           \n   <chr>      <chr>                <glue>                         \n 1 Bình Chánh Phường Bình Hưng Hòa Bình Chánh_Phường Bình Hưng Hòa\n 2 Bình Chánh Phường Bình Hưng Hòa Bình Chánh_Phường Bình Hưng Hòa\n 3 Bình Chánh Phường Bình Hưng Hòa Bình Chánh_Phường Bình Hưng Hòa\n 4 Bình Chánh Phường Bình Hưng Hòa Bình Chánh_Phường Bình Hưng Hòa\n 5 Bình Chánh Phường Bình Hưng Hòa Bình Chánh_Phường Bình Hưng Hòa\n 6 Bình Chánh Phường Bình Hưng Hòa Bình Chánh_Phường Bình Hưng Hòa\n 7 Bình Chánh Phường Bình Hưng Hòa Bình Chánh_Phường Bình Hưng Hòa\n 8 Bình Chánh Phường Bình Hưng Hòa Bình Chánh_Phường Bình Hưng Hòa\n 9 Bình Chánh Phường Bình Hưng Hòa Bình Chánh_Phường Bình Hưng Hòa\n10 Bình Chánh Phường Bình Hưng Hòa Bình Chánh_Phường Bình Hưng Hòa\n# ℹ 13,990 more rows\n```\n:::\n:::\n\n\n## Bài tập\n\n\n```{=html}\n<details>\n  <summary>\n    Load file <code> gdp-capita.xlsx </code>\n  </summary>\n```\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(janitor)\nlibrary(tidyverse)\n\ngdp <- read_excel(path = \"data/gdp-capita.xlsx\", sheet = 1) %>% clean_names()\n```\n:::\n\n\n</details>\n\n\n```{=html}\n<details>\n  <summary>\n    Xoay trục dữ liệu\n  </summary>\n```\n\nBảng dữ liệu hiện tại chưa tuân theo quy tắc tidy data vì các cột 2015 - 2022 **không phải là biến** và **mỗi hàng đang chứa nhiều quan sát** (quan sát cho các năm từ 2015 - 2022).\n\nHiện tại bảng dữ liệu đang ở `định dạng ngang (wide)`, khi nhiều quan sát của cùng chủ thể (trong VD này là các quốc gia) được lưu trữ trong một hàng duy nhất.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngdp <- gdp %>% \n  pivot_longer(\n    cols = starts_with(\"x\"),\n    # đặt tên mới cho biến\n    names_to = \"year\",\n    # đặt tên mới cho cột giá trị tương ứng\n    values_to = \"gdp\")\nhead(gdp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  country_name country_code year     gdp\n  <chr>        <chr>        <chr>  <dbl>\n1 Aruba        ABW          x2015 28419.\n2 Aruba        ABW          x2016 28450.\n3 Aruba        ABW          x2017 29329.\n4 Aruba        ABW          x2018 30918.\n5 Aruba        ABW          x2019 31903.\n6 Aruba        ABW          x2020 24008.\n```\n:::\n:::\n\n\n</details>\n\n\n```{=html}\n<details>\n  <summary>\n    Đọc sheet thứ 2 của file <code>gdp-capita.xlsx</code> và nối với <code>gdp</code>\n  </summary>\n```\n\n::: {.cell}\n\n```{.r .cell-code}\nmt <- read_excel(path = \"data/gdp-capita.xlsx\", sheet = 2) %>% \n  clean_names()\n\n# --- Nối 2 bảng bằng lệnh left_join\n# Trong trường hợp này, tuy lệnh join_by không cần thiết nhưng có thể giúp cho code rõ ràng hơn \njoined_gdp <- left_join(gdp, mt, by = join_by(country_code == country_code))\nhead(joined_gdp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  country_name country_code year     gdp region       income_group special_notes\n  <chr>        <chr>        <chr>  <dbl> <chr>        <chr>        <chr>        \n1 Aruba        ABW          x2015 28419. Latin Ameri… High income  <NA>         \n2 Aruba        ABW          x2016 28450. Latin Ameri… High income  <NA>         \n3 Aruba        ABW          x2017 29329. Latin Ameri… High income  <NA>         \n4 Aruba        ABW          x2018 30918. Latin Ameri… High income  <NA>         \n5 Aruba        ABW          x2019 31903. Latin Ameri… High income  <NA>         \n6 Aruba        ABW          x2020 24008. Latin Ameri… High income  <NA>         \n# ℹ 1 more variable: table_name <chr>\n```\n:::\n:::\n\n\n</details>\n\n\n```{=html}\n<details>\n  <summary>\n    Tạo cột mới tên <code>country_details</code> nối cột country_name và country_code theo format \"Name: [country_name] Code: [country_code]\" \n  </summary>\n```\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_gdp %>% \n  mutate(\n    # tạo cột mới kết hợp 3 cột country_name, country_code, region\n    country_details = str_glue(\"Name: {country_name} Code:{country_code} Region: {region}\"),\n    .keep = \"used\", # giữ các cột được sử dụng\n    .before = country_name # đặt cột country_details trước cột country_name\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,128 × 4\n   country_details                              country_name country_code region\n   <glue>                                       <chr>        <chr>        <chr> \n 1 Name: Aruba Code:ABW Region: Latin America … Aruba        ABW          Latin…\n 2 Name: Aruba Code:ABW Region: Latin America … Aruba        ABW          Latin…\n 3 Name: Aruba Code:ABW Region: Latin America … Aruba        ABW          Latin…\n 4 Name: Aruba Code:ABW Region: Latin America … Aruba        ABW          Latin…\n 5 Name: Aruba Code:ABW Region: Latin America … Aruba        ABW          Latin…\n 6 Name: Aruba Code:ABW Region: Latin America … Aruba        ABW          Latin…\n 7 Name: Aruba Code:ABW Region: Latin America … Aruba        ABW          Latin…\n 8 Name: Aruba Code:ABW Region: Latin America … Aruba        ABW          Latin…\n 9 Name: Africa Eastern and Southern Code:AFE … Africa East… AFE          <NA>  \n10 Name: Africa Eastern and Southern Code:AFE … Africa East… AFE          <NA>  \n# ℹ 2,118 more rows\n```\n:::\n:::\n\n\n</details>\n",
    "supporting": [
      "clean_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}