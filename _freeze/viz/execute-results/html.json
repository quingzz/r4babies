{
  "hash": "be24f93263bca8e2daafbccfc786a5e0",
  "result": {
    "markdown": "# Trực quan hóa\n\n## Thực hành\n\n### Biểu đồ mẫu\n\nBiểu đồ dưới đây nằm trong bài báo \"Mapping routine measles vaccination in low- and middle-income countries\"[@mapping2020] được đăng trên tạp chí Nature (IF 2022 = 64.8). Biểu đồ thể hiện tương quan giữa sự thay đổi bất bình đẳng địa lý và sự thay đổi độ phủ vaccine MCV1 của các quốc gia thu nhập thấp và trung bình từ năm 2000 đến năm 2019.\n\n![](img/viz/nature-comm.webp)\n\nChúng ta sẽ vẽ lại biểu đồ này bằng `ggplot`. Để đơn giản, chúng ta bỏ bớt một số chi tiết và sẽ vẽ biểu đồ sau:\n\n![](img/viz/nature-comm-simple.png)\n\n### Các bước thực hành\n\nĐầu tiên cần gọi library `ggplot` để vẽ biểu đồ và `ggsci` cho bảng màu.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggsci)\n```\n:::\n\n\nNhìn vào biểu đồ, chúng ta thấy trục x (nằm ngang) là sự thay đổi độ phủ vaccine, trục y (nằm dọc) là sự thay đổi bất bình đẳng địa lý. Có 10 quốc gia được hiển thị tên là Angola, Papua New Guinea, Pakistan, Chad, Ethiopia, Kenya, Nigeria, Liberia, Burkina Faso, India.\n\nVậy chúng ta cần một data frame có ít nhất 3 cột: (1) tên quốc gia, (2) sự thay đổi độ phủ vaccine, (3) sự thay đổi bất bình đẳng địa lý.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry <- c(\"Angola\", \"Papua New Guinea\", \"Pakistan\", \"Chad\", \"Ethiopia\", \"Kenya\", \"Nigeria\", \"Liberia\", \"Burkina Faso\", \"India\")\ncoverage <- c(-0.1, -0.35, 0.12, 0.14, 0.32, 0.07, 0.2, 0.18, 0.3, 0.35)\ninequality <- c(0.1, 0.08, 0.05, 0.01, 0.005, -0.06, -0.07, -0.11, -0.13, -0.16)\ndf_plot <- data.frame(country, inequality, coverage)\ndf_plot\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            country inequality coverage\n1            Angola      0.100    -0.10\n2  Papua New Guinea      0.080    -0.35\n3          Pakistan      0.050     0.12\n4              Chad      0.010     0.14\n5          Ethiopia      0.005     0.32\n6             Kenya     -0.060     0.07\n7           Nigeria     -0.070     0.20\n8           Liberia     -0.110     0.18\n9      Burkina Faso     -0.130     0.30\n10            India     -0.160     0.35\n```\n:::\n:::\n\n\nChúng ta sẽ vẽ biểu đồ cho 10 quốc gia này trước. Dạng biểu đồ scatterplot trong `ggplot` tương ứng với `geom_point()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](viz_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nĐể hiển thị tên quốc gia, chúng ta thêm `geom_text()` với `label` là tên nước (`country`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point() +\n  geom_text(aes(label = country))\n```\n\n::: {.cell-output-display}\n![](viz_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nHiện giờ chữ đang đè lên các điểm, chúng ta điều chỉnh vị trí của chữ bằng arguments `hjust` và `vjust` của `geom_text()`. Một số tên nước bị cắt mất như Papua New Guinea, chúng ta điều chỉnh lại giới hạn hiển thị của các trục tọa độ bằng `xlim()`, `ylim()` để hiển thị lại đầy đủ.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point() +\n  geom_text(aes(label = country), hjust = -0.1, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1))\n```\n\n::: {.cell-output-display}\n![](viz_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nCác điểm trong biểu đồ gốc có màu sắc và kích thước to nhỏ khác nhau, vậy trong data frame cần có thêm 1 cột màu sắc và 1 cột kích thước.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_plot$size <- c(1.1, 1, 3, 1, 2, 1.1, 3, 1, 1.1, 4)\ndf_plot$color <- c(1, 2, 3, 1, 1, 1, 1, 1, 1, 3)\ndf_plot\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            country inequality coverage size color\n1            Angola      0.100    -0.10  1.1     1\n2  Papua New Guinea      0.080    -0.35  1.0     2\n3          Pakistan      0.050     0.12  3.0     3\n4              Chad      0.010     0.14  1.0     1\n5          Ethiopia      0.005     0.32  2.0     1\n6             Kenya     -0.060     0.07  1.1     1\n7           Nigeria     -0.070     0.20  3.0     1\n8           Liberia     -0.110     0.18  1.0     1\n9      Burkina Faso     -0.130     0.30  1.1     1\n10            India     -0.160     0.35  4.0     3\n```\n:::\n:::\n\n\nBây giờ chúng ta có thể thêm màu sắc và kích thước vào `geom_point()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point(aes(size = size, color = color)) +\n  geom_text(aes(label = country), hjust = -0.1, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1))\n```\n\n::: {.cell-output-display}\n![](viz_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nCác quốc gia chính đã được vẽ xong, chúng ta cần có các điểm khác trên biểu đồ mà không có tên quốc gia. Có thể tạo ra các điểm ngẫu nhiên như vậy bằng R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nnp <- 50\nrd <- data.frame(country = rep(\"\", np),\n                 inequality = rnorm(n = np, mean = -0.03, sd = 0.05),\n                 coverage = rnorm(n = np, mean = 0.1, sd = 0.12),\n                 size = runif(np, min = 1, max = 2),\n                 color = sample(1:6, np, replace = T))\nhead(rd)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  country  inequality   coverage     size color\n1         -0.05802378 0.13039822 1.238726     1\n2         -0.04150887 0.09657439 1.962359     2\n3          0.04793542 0.09485555 1.601366     5\n4         -0.02647458 0.26423227 1.515030     5\n5         -0.02353561 0.07290748 1.402573     1\n6          0.05575325 0.28197647 1.880247     2\n```\n:::\n:::\n\n\n- `set.seed(123)`: dùng để cố định cách tạo ra các điểm ngẫu nhiên.\n- `np <- 50`: tạo ra 50 điểm ngẫu nhiên.\n- `country = rep(\"\", np)`: các điểm này không có tên quốc gia.\n- `inequality = rnorm(n = np, mean = -0.03, sd = 0.05)`: sự thay đổi bất bình đẳng địa lý (giá trị trên trục y) của các điểm này được tạo ra ngẫu nhiên theo phân phối bình thường với trung bình là -0.03 và độ lệch chuẩn là 0.05.\n- `coverage = rnorm(n = np, mean = 0.1, sd = 0.12)`: sự thay đổi độ phủ vaccine (giá trị trên trục x) của các điểm này được tạo ra ngẫu nhiên theo phân phối bình thường với trung bình là 0.1 và độ lệch chuẩn là 0.12.\n- `size = runif(np, min = 1, max = 2)`: kích thước các điểm này là số thực ngẫu nhiên từ 1 đến 2.\n- `color = sample(1:6, np, replace = T)`: màu sắc là số nguyên ngẫu nhiên từ 1 đến 6.\n\nBây giờ chúng ta ghép data frame `rd` này với data frame của biểu đồ `df_plot`. Cột màu sắc được đưa về dạng `factor` để hiển thị màu. Sau đó dùng code `ggplot` trên để vẽ.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_plot <- rbind(df_plot, rd)\ndf_plot$color <- factor(df_plot$color)\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point(aes(size = size, color = color)) +\n  geom_text(aes(label = country), hjust = -0.1, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1))\n```\n\n::: {.cell-output-display}\n![](viz_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### Kết quả\n\nBiểu đồ được tạo ra đã tương đối giống biểu đồ gốc. Chúng ta có thể thêm các đường thẳng x = 0, y = 0, chọn bảng màu, chọn lại theme cho biểu đồ để nhìn giống biểu đồ gốc hơn.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point(aes(size = size, color = color), alpha = 0.8) +\n  geom_text(aes(label = country), hjust = -0.1, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1)) +\n  geom_vline(xintercept = 0) +\n  geom_hline(yintercept = 0) +\n  scale_color_npg() +\n  theme_classic() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](viz_files/figure-html/unnamed-chunk-10-1.png){width=576}\n:::\n:::\n\n\n::: {.callout-note}\n\n# Bài tập\n\nThay đổi tiêu đề của các trục tọa độ và chú thích kích thước điểm, màu cho giống với biểu đồ mẫu. Đặt phần chú thích ở trên biểu đồ giống như biểu đồ mẫu.\n\n:::",
    "supporting": [
      "viz_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}