{
  "hash": "8690fd7b09b445495e56dfe544356fe5",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  html:\n    df-print: paged\n---\n\n\n# Trực quan hóa 1\n\n::: {.callout-note collapse=\"true\"}\n\n## Slide\n\n\n```{=html}\n<div>\n<iframe class=\"slide-deck\" style=\"height: 50vh; width: 100%;\" src=\"slides/viz-prac.html\"></iframe>\n</div>\n```\n\n\n[{{< fa expand size=fw >}} Full screen](slides/viz-prac.html){.btn .btn-outline-secondary role=\"button\"}\n\n:::\n\n::: callout-note\n\n# Data thực hành\n\n\n{{< downloadthis data/simulated_covid.rds dname=\"simulated_covid\" label=\"simulated_covid.rds\" type=light >}}\n\n\n\n:::\n\n## Biểu đồ 1\n\nBiểu đồ dưới đây nằm trong bài báo \"Mapping routine measles vaccination in low- and middle-income countries\"[@mapping2020] được đăng trên tạp chí Nature (IF 2023 = 50.5). Biểu đồ thể hiện tương quan giữa sự thay đổi bất bình đẳng địa lý và sự thay đổi độ phủ vaccine MCV1 của các quốc gia thu nhập thấp và trung bình từ năm 2000 đến năm 2019. Chúng ta sẽ vẽ lại biểu đồ này bằng `ggplot2`.\n\n![Absolute geographical inequality of MCV1 coverage in 2000 and 2019](img/viz/nature.png){#fig-viz-nature}\n\n### Các bước vẽ\n\nGọi các library cần thiết.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n```\n:::\n\n\nNhìn vào biểu đồ, chúng ta thấy trục x (nằm ngang) là sự thay đổi độ phủ vaccine, trục y (nằm dọc) là sự thay đổi bất bình đẳng địa lý. Có 10 quốc gia được hiển thị tên là Angola, Papua New Guinea, Pakistan, Chad, Ethiopia, Kenya, Nigeria, Liberia, Burkina Faso, India.\n\nVậy chúng ta cần một data frame có ít nhất 3 cột: (1) tên quốc gia, (2) sự thay đổi độ phủ vaccine, (3) sự thay đổi bất bình đẳng địa lý.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry <- c(\"Angola\", \"Papua New Guinea\", \"Pakistan\", \"Chad\", \"Ethiopia\", \"Kenya\", \"Nigeria\", \"Liberia\", \"Burkina Faso\", \"India\")\ncoverage <- c(-0.14, -0.35, 0.12, 0.14, 0.32, 0.07, 0.2, 0.18, 0.3, 0.35)\ninequality <- c(0.1, 0.08, 0.05, 0.01, 0.005, -0.06, -0.07, -0.11, -0.13, -0.16)\ndf_plot <- data.frame(country, coverage, inequality)\ndf_plot\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"country\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"coverage\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"inequality\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Angola\",\"2\":\"-0.14\",\"3\":\"0.100\"},{\"1\":\"Papua New Guinea\",\"2\":\"-0.35\",\"3\":\"0.080\"},{\"1\":\"Pakistan\",\"2\":\"0.12\",\"3\":\"0.050\"},{\"1\":\"Chad\",\"2\":\"0.14\",\"3\":\"0.010\"},{\"1\":\"Ethiopia\",\"2\":\"0.32\",\"3\":\"0.005\"},{\"1\":\"Kenya\",\"2\":\"0.07\",\"3\":\"-0.060\"},{\"1\":\"Nigeria\",\"2\":\"0.20\",\"3\":\"-0.070\"},{\"1\":\"Liberia\",\"2\":\"0.18\",\"3\":\"-0.110\"},{\"1\":\"Burkina Faso\",\"2\":\"0.30\",\"3\":\"-0.130\"},{\"1\":\"India\",\"2\":\"0.35\",\"3\":\"-0.160\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nChúng ta sẽ vẽ biểu đồ cho 10 quốc gia này trước. Tưởng tượng nếu vẽ biểu đồ này bằng tay thì mình sẽ vẽ như thế nào? Trước tiên chúng ta vẽ 2 trục tọa độ:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality))\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-3-1.svg){width=100%}\n:::\n:::\n\n\nSau khi có 2 trục tọa độ, tiến hành chấm các điểm lên theo đúng tọa độ (x, y) của nó. Dạng biểu đồ điểm còn gọi là scatter plot trong `ggplot` tương ứng với `geom_point()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-4-1.svg){width=100%}\n:::\n:::\n\n\nSau khi có các điểm, chúng ta viết tên quốc gia lên bằng cách dùng `geom_text()` với `label` là tên nước (`country`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point() +\n  geom_text(aes(label = country))\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-5-1.svg){width=100%}\n:::\n:::\n\n\nHiện giờ chữ đang đè lên các điểm, chúng ta điều chỉnh vị trí của chữ bằng arguments `hjust` và `vjust` của `geom_text()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point() +\n  geom_text(aes(label = country), hjust = -0.2, vjust = 0.2)\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-6-1.svg){width=100%}\n:::\n:::\n\n\nMột số tên nước bị cắt mất như Papua New Guinea, chúng ta điều chỉnh lại giới hạn hiển thị của các trục tọa độ bằng `xlim()`, `ylim()` để hiển thị lại đầy đủ.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point() +\n  geom_text(aes(label = country), hjust = -0.2, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1))\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-7-1.svg){width=100%}\n:::\n:::\n\n\nCác điểm trong biểu đồ gốc có màu sắc và kích thước to nhỏ khác nhau, vậy trong data frame cần có thêm 1 cột màu sắc và 1 cột kích thước.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_plot$size <- c(1.1, 0.6, 3, 1, 2, 1.1, 3, 0.7, 1.1, 8)\ndf_plot$color <- c(\"purple\", \"blue\", \"yellow\", \"purple\", \"purple\", \"purple\", \"purple\", \"purple\", \"purple\", \"yellow\")\ndf_plot\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"country\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"coverage\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"inequality\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"size\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"color\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Angola\",\"2\":\"-0.14\",\"3\":\"0.100\",\"4\":\"1.1\",\"5\":\"purple\"},{\"1\":\"Papua New Guinea\",\"2\":\"-0.35\",\"3\":\"0.080\",\"4\":\"0.6\",\"5\":\"blue\"},{\"1\":\"Pakistan\",\"2\":\"0.12\",\"3\":\"0.050\",\"4\":\"3.0\",\"5\":\"yellow\"},{\"1\":\"Chad\",\"2\":\"0.14\",\"3\":\"0.010\",\"4\":\"1.0\",\"5\":\"purple\"},{\"1\":\"Ethiopia\",\"2\":\"0.32\",\"3\":\"0.005\",\"4\":\"2.0\",\"5\":\"purple\"},{\"1\":\"Kenya\",\"2\":\"0.07\",\"3\":\"-0.060\",\"4\":\"1.1\",\"5\":\"purple\"},{\"1\":\"Nigeria\",\"2\":\"0.20\",\"3\":\"-0.070\",\"4\":\"3.0\",\"5\":\"purple\"},{\"1\":\"Liberia\",\"2\":\"0.18\",\"3\":\"-0.110\",\"4\":\"0.7\",\"5\":\"purple\"},{\"1\":\"Burkina Faso\",\"2\":\"0.30\",\"3\":\"-0.130\",\"4\":\"1.1\",\"5\":\"purple\"},{\"1\":\"India\",\"2\":\"0.35\",\"3\":\"-0.160\",\"4\":\"8.0\",\"5\":\"yellow\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nBây giờ chúng ta có thể thêm màu sắc và kích thước vào `geom_point()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point(aes(size = size, color = color)) +\n  geom_text(aes(label = country), hjust = -0.2, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1))\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-9-1.svg){width=100%}\n:::\n:::\n\n\nCác quốc gia chính đã được vẽ xong, chúng ta cần có các điểm khác trên biểu đồ mà không có tên quốc gia. Có thể tạo ra các điểm ngẫu nhiên như vậy bằng R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nnp <- 50\nrd <- data.frame(\n  country = rep(\"\", np),\n  coverage = rnorm(n = np, mean = 0.1, sd = 0.12),\n  inequality = rnorm(n = np, mean = -0.05, sd = 0.04),\n  size = rnorm(n = np, mean = 1, sd = 0.4),\n  color = sample(\n    c(\"red\", \"green\", \"darkblue\", \"yellow\", \"blue\", \"purple\"),\n    np,\n    replace = T\n  )\n)\nhead(rd)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"country\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"coverage\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"inequality\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"size\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"color\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"\",\"2\":\"0.03274292\",\"3\":\"-0.039867259\",\"4\":\"0.7158374\",\"5\":\"green\",\"_rn_\":\"1\"},{\"1\":\"\",\"2\":\"0.07237870\",\"3\":\"-0.051141870\",\"4\":\"1.1027535\",\"5\":\"green\",\"_rn_\":\"2\"},{\"1\":\"\",\"2\":\"0.28704500\",\"3\":\"-0.051714818\",\"4\":\"0.9013232\",\"5\":\"red\",\"_rn_\":\"3\"},{\"1\":\"\",\"2\":\"0.10846101\",\"3\":\"0.004744091\",\"4\":\"0.8609830\",\"5\":\"green\",\"_rn_\":\"4\"},{\"1\":\"\",\"2\":\"0.11551453\",\"3\":\"-0.059030839\",\"4\":\"0.6193526\",\"5\":\"red\",\"_rn_\":\"5\"},{\"1\":\"\",\"2\":\"0.30580780\",\"3\":\"0.010658824\",\"4\":\"0.9819889\",\"5\":\"blue\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n-   `set.seed(123)`: dùng để cố định cách tạo ra các điểm ngẫu nhiên.\n-   `np <- 50`: tạo ra 50 điểm ngẫu nhiên.\n-   `country = rep(\"\", np)`: các điểm này không có tên quốc gia.\n-   `coverage = rnorm(n = np, mean = 0.1, sd = 0.12)`: sự thay đổi độ phủ vaccine (giá trị trên trục x) của các điểm này là số thực được tạo ra ngẫu nhiên theo phân phối bình thường với trung bình là 0.1 và độ lệch chuẩn là 0.12.\n-   `inequality = rnorm(n = np, mean = -0.05, sd = 0.04)`: sự thay đổi bất bình đẳng địa lý (giá trị trên trục y) của các điểm này là số thực được tạo ra ngẫu nhiên theo phân phối bình thường với trung bình là -0.05 và độ lệch chuẩn là 0.04.\n-   `size = rnorm(n = np, mean = 1, sd = 0.4)`: kích thước của các điểm này là số thực được tạo ra ngẫu nhiên theo phân phối bình thường với trung bình là 1 và độ lệch chuẩn là 0.4.\n-   `color = sample(1:6, np, replace = T)`: màu sắc là số nguyên ngẫu nhiên từ 1 đến 6.\n\nBây giờ chúng ta ghép data frame `rd` này với data frame của biểu đồ `df_plot`. Cột màu sắc được đưa về dạng `factor` để hiển thị màu. Sau đó dùng code `ggplot` trên để vẽ.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_plot <- rbind(df_plot, rd)\ndf_plot$color <- factor(df_plot$color)\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point(aes(size = size, color = color)) +\n  geom_text(aes(label = country), hjust = -0.2, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1))\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-11-1.svg){width=100%}\n:::\n:::\n\n\n### Kết quả\n\nBiểu đồ được tạo ra đã tương đối giống biểu đồ gốc. Chúng ta có thể thêm các đường thẳng x = 0, y = 0, chọn bảng màu, chỉnh lại kích thước các điểm, chọn lại theme cho biểu đồ để nhìn giống biểu đồ gốc hơn.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ncols <- c(\n  \"red\" = \"#fa8495\",\n  \"green\" = \"#4ca258\",\n  \"darkblue\" = \"#6493bb\",\n  \"yellow\" = \"#d7c968\",\n  \"blue\" = \"#7dd8f3\",\n  \"purple\" = \"#bc5c91\"\n)\n\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point(aes(size = size, color = color), alpha = 0.8) +\n  geom_text(aes(label = country), hjust = -0.2, vjust = 0.2) +\n  geom_vline(xintercept = 0, color = \"#999999\") +\n  geom_hline(yintercept = 0, color = \"#999999\") +\n  scale_x_continuous(breaks = c(-0.25, 0, 0.25, 0.5),\n                     limits = c(-0.4, 0.55)) +\n  scale_y_continuous(breaks = c(-0.1, 0, 0.1), limits = c(-0.16, 0.1)) +\n  scale_size_continuous(\n    breaks = c(2, 4, 6, 8),\n    labels = c(\"50 million\", \"100 million\", \"150 million\", \"200 million\"),\n    range = c(0, 8),\n    guide = guide_legend(order = 1)\n  ) +\n  scale_color_manual(\n    values = cols,\n    breaks = c(\"red\", \"green\", \"darkblue\", \"yellow\", \"blue\", \"purple\"),\n    labels = c(\n      \"Central Europe, Eastern Europe and Central Asia\",\n      \"Latin America and Caribbean\",\n      \"North Africa and Middle East\",\n      \"South Asia\",\n      \"Southeast Asia, East Asia and Oceania\",\n      \"Sub-Saharan Africa\"\n    ),\n    guide = guide_legend(order = 2)\n  ) +\n  labs(x = \"Change in MCV1 coverage (2019-2000)\",\n       y = \"Change in absolute geographical inequality (2019-2000)\",\n       size = NULL,\n       color = NULL) +\n  theme_classic() +\n  theme(\n    legend.position = \"top\",\n    legend.direction = \"vertical\",\n    legend.text = element_text(size = 11),\n    legend.key.height = unit(0.5, \"cm\"),\n    axis.text = element_text(size = 11)\n  )\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-12-1.svg){width=100%}\n:::\n:::\n\n\nSo sánh với biểu đồ gốc ở đây @fig-viz-nature.\n\n## Biểu đồ 2\n\nBiểu đồ dưới đây nằm trong bài báo \"Global burden of bacterial antimicrobial resistance in 2019: a systematic analysis\" được đăng trên tạp chí The Lancet (IF 2023 = 98.4).\n\n![All-age rate of deaths attributable to and associated with bacterial antimicrobial resistance by GBD region, 2019](img/viz/lancet.svg){#fig-viz-lancet}\n\n### Các bước vẽ\n\nTương tự bài tập trên, chúng ta thấy (1) trục x là các vùng Global Burden of Disease (GBD regions), (2) màu sắc là các GBD super-regions, trục y là số tử vong chia thành 2 loại là (3) associated with resistance và (4) attributable to resistance, mỗi loại số tử vong có (5, 6) cận dưới và (7, 8) cận trên của khoảng tin cậy. Vậy chúng ta phải có data gồm 8 cột như sau.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregion <- c(1:21)\n\nsup_region <- c(\n  \"green\",\n  \"green\",\n  \"green\",\n  \"green\",\n  \"blue\",\n  \"turquoise\",\n  \"purple\",\n  \"orange\",\n  \"purple\",\n  \"turquoise\",\n  \"red\",\n  \"red\",\n  \"red\",\n  \"orange\",\n  \"turquoise\",\n  \"purple\",\n  \"purple\",\n  \"red\",\n  \"orange\",\n  \"pink\",\n  \"purple\"\n)\n\nassoc <- c(114.8, 89.0, 86, 79.4, 76.8, 74.0, 72.3, 71.6, 70.7, 68.0, 65.1, 63.2, 63.0, 54.8, 53.3, 52.5, 51.0, 50.6, 43.3, 42.0, 28.0)\n\nassoc_up <- c(145.3, 112.6, 109.8, 101.6, 101.2, 105.6, 93.4, 98.0, 92.3, 100.9, 90.5, 85.4, 83.1, 74.9, 74.3, 73.0, 71.5, 70.9, 66.1, 59.5, 39.9)\n\nassoc_lo <- c(90.4, 70.5, 65.9, 61.7, 57.2, 48.8, 55.1, 51.4, 53.2, 43.2, 45.5, 45.4, 47.1, 38.9, 37.7, 37.0, 35.4, 34.7, 27.4, 28.7, 18.8)\n\nattr <- c(27.3, 21.4, 20.7, 19.4, 21.5, 19.9, 18.6, 17.0, 16.5, 16.6, 16.2, 15.9, 15.2, 14.4, 13.8, 11.7, 12.3, 13.0, 10.5, 11.2, 6.5)\n\nattr_up <- c(35.3, 28.1, 27.7, 25.9, 29.8, 28.5, 24.7, 23.2, 23.1, 25.0, 23.2, 21.9, 20.6, 20.0,  19.5, 16.6, 17.5, 18.5, 16.0, 16.3, 9.4)\n\nattr_lo <- c(20.9, 16.3, 14.9, 14.3, 15.1, 13.1, 13.9, 12.1, 11.6, 10.5, 11.0, 11.1, 11.1, 10.0, 9.5, 8.0, 8.3, 8.8, 6.5, 7.5, 4.3)\n\ndf_plot <- data.frame(region, sup_region, assoc, assoc_up, assoc_lo, attr, attr_up, attr_lo)\n\ndf_plot <- df_plot |>\n  mutate(region = factor(region),\n         sup_region = factor(\n           sup_region,\n           levels = c(\"turquoise\", \"purple\", \"red\", \"pink\", \"blue\", \"orange\", \"green\")\n         ))\n```\n:::\n\n\nXem data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(df_plot)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"region\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"sup_region\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"assoc\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"assoc_up\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"assoc_lo\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"attr\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"attr_up\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"attr_lo\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"green\",\"3\":\"114.8\",\"4\":\"145.3\",\"5\":\"90.4\",\"6\":\"27.3\",\"7\":\"35.3\",\"8\":\"20.9\",\"_rn_\":\"1\"},{\"1\":\"2\",\"2\":\"green\",\"3\":\"89.0\",\"4\":\"112.6\",\"5\":\"70.5\",\"6\":\"21.4\",\"7\":\"28.1\",\"8\":\"16.3\",\"_rn_\":\"2\"},{\"1\":\"3\",\"2\":\"green\",\"3\":\"86.0\",\"4\":\"109.8\",\"5\":\"65.9\",\"6\":\"20.7\",\"7\":\"27.7\",\"8\":\"14.9\",\"_rn_\":\"3\"},{\"1\":\"4\",\"2\":\"green\",\"3\":\"79.4\",\"4\":\"101.6\",\"5\":\"61.7\",\"6\":\"19.4\",\"7\":\"25.9\",\"8\":\"14.3\",\"_rn_\":\"4\"},{\"1\":\"5\",\"2\":\"blue\",\"3\":\"76.8\",\"4\":\"101.2\",\"5\":\"57.2\",\"6\":\"21.5\",\"7\":\"29.8\",\"8\":\"15.1\",\"_rn_\":\"5\"},{\"1\":\"6\",\"2\":\"turquoise\",\"3\":\"74.0\",\"4\":\"105.6\",\"5\":\"48.8\",\"6\":\"19.9\",\"7\":\"28.5\",\"8\":\"13.1\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nTrước tiên chúng ta vẽ 2 trục tọa độ. Trong trường hợp này, vì trục y vừa là deaths của associated with resistance và attributable to resistance, nên chúng ta có thể chỉ vẽ trục x trước.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = region))\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-15-1.svg){width=100%}\n:::\n:::\n\n\nChúng ta sẽ vẽ các cột deaths của associated with resistance lên trước. Dạng biểu đồ cột là `geom_bar()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = region)) +\n  geom_bar(aes(y = assoc), stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-16-1.svg){width=100%}\n:::\n:::\n\n\nTô màu cho các cột này.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = region)) +\n  geom_bar(aes(y = assoc, fill = sup_region), stat = \"identity\")\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-17-1.svg){width=100%}\n:::\n:::\n\n\nMàu chưa hiển thị đúng với màu mình muốn, quy định mã màu và chỉnh màu lại bằng `scale_fill_manual()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncols <- c(\n  \"green\" = \"#a5d474\",\n  \"orange\" = \"#f5b168\",\n  \"blue\" = \"#74accf\",\n  \"pink\" = \"#f7c6dc\",\n  \"red\" = \"#f48073\",\n  \"purple\" = \"#b2b0d5\",\n  \"turquoise\" = \"#82cec2\"\n)\n\nggplot(df_plot, aes(x = region)) +\n  geom_bar(aes(y = assoc, fill = sup_region), stat = \"identity\") +\n  scale_fill_manual(values = cols)\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-18-1.svg){width=100%}\n:::\n:::\n\n\nVẽ khoảng tin cậy bằng `geom_errorbar()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = region)) +\n  geom_bar(aes(y = assoc, fill = sup_region), stat = \"identity\") +\n  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +\n  scale_fill_manual(values = cols)\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-19-1.svg){width=100%}\n:::\n:::\n\n\nVậy là đã vẽ được các cột của deaths associated with resistance, giờ chúng ta vẽ deaths attributable to resistance. Một mẹo để 2 cột này chồng lên nhau và hiển thị được một legend cho 2 nhóm này là sử dụng tham số `alpha`, dùng để quy định độ trong suốt.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = region)) +\n  geom_bar(aes(y = assoc, fill = sup_region, alpha = \"a\"), stat = \"identity\") +\n  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +\n  geom_bar(aes(y = attr, alpha = \"b\"), width = 0.65, stat = \"identity\") +\n  geom_errorbar(aes(ymin = attr_lo, ymax = attr_up), width = 0.1) +\n  scale_fill_manual(values = cols)\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-20-1.svg){width=100%}\n:::\n:::\n\n\nViệc sử dụng `alpha` làm cho cột deaths associated with resistance quá trong suốt gần như không thấy gì, nhưng đã hiện legend alpha có 2 màu xám nhạt, xám đậm giống như hình gốc. Tương tự như đã chỉnh màu bằng `scale_fill_manual()`, chúng ta chỉnh độ trong suốt lại bằng `scale_alpha_discrete()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_plot, aes(x = region)) +\n  geom_bar(aes(y = assoc, fill = sup_region, alpha = \"a\"), stat = \"identity\") +\n  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +\n  geom_bar(aes(y = attr, alpha = \"b\"), width = 0.65, stat = \"identity\") +\n  geom_errorbar(aes(ymin = attr_lo, ymax = attr_up), width = 0.1) +\n  scale_fill_manual(values = cols) +\n  scale_alpha_discrete(range = c(1, 0.8),\n                       guide = guide_legend(override.aes = list(fill = c(\"gray70\", \"gray20\"))))\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-21-1.svg){width=100%}\n:::\n:::\n\n\n### Kết quả\n\nGiờ chỉ cần sửa lại tên các vùng, tên cột, tên legend... cho giống với hình gốc.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(df_plot, aes(x = region)) +\n  geom_bar(aes(y = assoc, fill = sup_region, alpha = \"a\"), stat = \"identity\") +\n  geom_errorbar(aes(ymin = assoc_lo, ymax = assoc_up), width = 0.1) +\n  geom_bar(aes(y = attr, alpha = \"b\"), width = 0.65, stat = \"identity\") +\n  geom_errorbar(aes(ymin = attr_lo, ymax = attr_up), width = 0.1) +\n  scale_x_discrete(\n    expand = c(0, 0),\n    labels = c(\n      \"Western sub-Saharan Africa\",\n      \"Eastern sub-Saharan Africa\",\n      \"Central sub-Saharan Africa\",\n      \"Southern sub-Saharan Africa\",\n      \"South Asia\",\n      \"Eastern Europe\",\n      \"Southern Latin America\",\n      \"Oceania\",\n      \"High-income North America\",\n      \"Central Europe\",\n      \"Caribbean\",\n      \"Andean Latin America\",\n      \"Tropical Latin America\",\n      \"Southeast Asia\",\n      \"Central Asia\",\n      \"Western Europe\",\n      \"High-income North America\",\n      \"Central Latin America\",\n      \"East Asia\",\n      \"North Africa and Middle East\",\n      \"Australasia\"\n    )\n  ) +\n  scale_y_continuous(\n    limits = c(0, 165),\n    breaks = c(0, 50, 100, 150),\n    expand = c(0, 0)\n  ) +\n  scale_fill_manual(\n    values = cols,\n    labels = c(\n      \"Central Europe, eastern Europe, and central Asia\",\n      \"High income\",\n      \"Latin America and Caribbean\",\n      \"North Africa and Middle East\",\n      \"South Asia\",\n      \"Southern Asia, east Asia, and Oceania\",\n      \"Sub-Saharan Africa\"\n    ),\n    guide = guide_legend(order = 1)\n  ) +\n  scale_alpha_discrete(\n    range = c(1, 0.8),\n    guide = guide_legend(override.aes = list(fill = c(\"gray70\", \"gray20\")), order = 2),\n    labels = c(\"Associated with resistance\", \"Attributable to resistance\")\n  ) +\n  labs(x = \"GBD region\",\n       y = \"Deaths (rate per 100000 population)\",\n       fill = \"GBD super-region\",\n       alpha = \"Resistance\") +\n  theme_classic() +\n  theme(\n    axis.text = element_text(size = 11),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = c(0.57, 0.86),\n    legend.box = \"horizontal\",\n    legend.key.height = unit(0.5, \"cm\"),\n    legend.text = element_text(size = 10),\n    legend.title = element_text(face = \"bold\"),\n    plot.margin = margin(10, 10, 10, 60)\n  )\n```\n\n::: {.cell-output-display}\n![](viz-prac_files/figure-html/unnamed-chunk-22-1.svg){width=100%}\n:::\n:::\n\n\nSo sánh với biểu đồ gốc ở đây @fig-viz-lancet.\n\n## Bài tập\n\nDùng data thực hành `simulated_covid.rds` để vẽ biểu đồ cột thể hiện số ca nhiễm ở từng quận.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- readRDS(\"data/simulated_covid.rds\")\n```\n:::\n\n\nGợi ý: Đếm số ca nhiễm ở từng quận bằng lệnh `count()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_plot <- df |> \n  count(district)\n```\n:::\n",
    "supporting": [
      "viz-prac_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}