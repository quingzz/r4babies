[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for babies",
    "section": "",
    "text": "Tổng quan"
  },
  {
    "objectID": "index.html#về-khóa-học",
    "href": "index.html#về-khóa-học",
    "title": "R for babies",
    "section": "Về khóa học",
    "text": "Về khóa học\nKhóa học được thiết kế để hướng dẫn đội ngũ nhân viên của Trung tâm Kiểm soát bệnh tật Thành phố Hồ Chí Minh (HCDC) trong series “Tập huấn về Phân tích dữ liệu sử dụng phần mềm R và Nghiên cứu khoa học”.\nCấu trúc khóa học được tham khảo từ các tài liệu sau:\n\nBeckerman, AP, Childs, DZ, & Petchey, OL. Getting started with R: an introduction for biologists. Oxford University Press. 2017.\nBatra, Neale, et al. The Epidemiologist R Handbook. 2021.\n\nData cho bài tập và ví dụ được tham khảo từ các nguồn sau:\n\nWorld Bank. GDP per capita (current US$). Retrieved February 10, 2024 from World Bank Open Data.\nLaksika Tharmalingam. Health and Demographics Dataset, Version 1. Retrieved February 10, 2024 from Kaggle."
  },
  {
    "objectID": "index.html#liên-hệ",
    "href": "index.html#liên-hệ",
    "title": "R for babies",
    "section": "Liên hệ",
    "text": "Liên hệ\nMọi ý kiến đóng góp, phản ánh, câu hỏi thắc mắc có thể comment (sử dụng tài khoản github) trong khung bên dưới hoặc liên hệ Thinh Ong."
  },
  {
    "objectID": "intro.html#r",
    "href": "intro.html#r",
    "title": "1  Giới thiệu",
    "section": "1.1 R",
    "text": "1.1 R\nR là một ngôn ngữ lập trình được phát triển bởi GS. Robert Gentleman và GS. Ross Ihaka tại Đại học Auckland1. Tên gọi R được đặt theo chữ cái đầu của tên 2 tác giả (Robert và Ross).\n\n\nRobert Gentleman: “Let’s write some software.”\nRoss Ihaka: “Sure, that sounds like fun.”2\n\n\n1.1.1 Ngôn ngữ lập trình\nNgôn ngữ lập trình là một tập hợp các hướng dẫn để yêu cầu máy tính thực hiện một số tác vụ nhất định.3\nNgôn ngữ là phương tiện để con người giao tiếp với con người. Ngôn ngữ lập trình là phương tiện để con người giao tiếp với máy tính.3 Vì vậy, học ngôn ngữ lập trình cũng giống như học ngoại ngữ, bao gồm từ vựng, ngữ pháp, cụm từ, mệnh đề… để viết thành một câu văn mà máy tính có thể hiểu được và làm đúng những gì con người muốn.\n\nMột số ngôn ngữ lập trình trong phân tích dữ liệu [Photo credit]\n\n\n1.1.2 Câu văn trong R\nCâu lệnh (command) hoặc hàm (function) chính là những câu văn trong R để giao tiếp với máy tính. Chúng ta phải học ngữ pháp của 1 câu lệnh và ý nghĩa của nó để có thể sử dụng R để ra lệnh cho máy tính. Một câu lệnh trong R thường có dạng như sau:\n\ntên-câu-lệnh(tên-tham-số = data-đầu-vào hoặc lựa-chọn)\n\n\nTên câu lệnh: nằm trước dấu (), thể hiện ý nghĩa câu lệnh dùng để làm gì.\nTên tham số (argument): nằm trong dấu () là những tham số của câu lệnh đó. Tham số là những yêu cầu nhỏ và cụ thể để máy tính hiểu rõ hơn yêu cầu của người dùng.\nDấu =: dùng để gán 1 giá trị cho tham số. Giá trị gán cho tham số có thể là một data đầu vào, hoặc một lựa chọn của người dùng (đúng/sai).\n\nVí dụ:\n\nmean(x = df$col1, na.rm = TRUE)\n\n\nTên câu lệnh là mean: chúng ta đang yêu cầu máy tính hãy tính giá trị trung bình của 1 biến.\nCác tham số là x và na.rm:\n\nx: là data đầu vào, ở đây chúng ta viết x = df$col1 để cho máy tính biết data đầu vào là cột col1 trong bảng data df.\nna.rm: là yêu cầu cụ thể cách giải quyết khi gặp missing value (NA), ở đây chúng ta lựa chọn na.rm = TRUE nghĩa là nếu cột col1 có NA thì bỏ những giá trị NA đi trước khi tính trung bình.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nĐể đọc hướng dẫn sử dụng về câu lệnh, gõ ?tên-câu-lệnh.\n\n\n\n\n1.1.3 R và SPSS, Stata, SAS\n\n\nR là ngôn ngữ lập trình. Người dùng giao tiếp, đối thoại với máy tính bằng cách nhập những câu văn (code) giống như chat với máy tính, để máy hiểu và làm đúng những gì con người muốn.\nSPSS, Stata, SAS là các gói phần mềm thống kê (software package) thương mại, được thiết kế giao diện người dùng kéo thả, click chọn để dễ dàng giao tiếp với máy tính hơn. Người dùng cũng có thể viết code (SPSS Syntax, Stata command, SAS program) để lưu lại các bước phân tích, nhưng đây không phải mục tiêu chính của các gói thương mại này. Người dùng không thể yêu cầu máy tính làm gì khác với những chức năng đã được quy định sẵn trong gói phần mềm. Mỗi gói phần mềm được viết bằng một ngôn ngữ lập trình:\n\nSPSS: Java\nStata: C\nSAS: C"
  },
  {
    "objectID": "intro.html#tại-sao-học-r",
    "href": "intro.html#tại-sao-học-r",
    "title": "1  Giới thiệu",
    "section": "1.2 Tại sao học R?",
    "text": "1.2 Tại sao học R?\n\nMiễn phí và sử dụng được trên mọi hệ điều hành thông dụng (Windows, Macs, Linux).\nR là ngôn ngữ truyền thống cho phân tích dữ liệu trong nghiên cứu y sinh (biostatistics), tin sinh (bioinformatics), dịch tễ, mô hình dự báo… Chuyên gia ở các ngành này liên tục phát triển các gói phần mềm (packages) viết bằng R cập nhật các phương pháp mới nhất, machine learning, thiết kế web…\n\n\nCác gói phần mềm phổ biến trong R [Photo credit]\n\nVẽ biểu đồ chất lượng cao.\n\n\nMột số biểu đồ vẽ bằng R [Photo credit]"
  },
  {
    "objectID": "intro.html#sec-install",
    "href": "intro.html#sec-install",
    "title": "1  Giới thiệu",
    "section": "1.3 R và RStudio",
    "text": "1.3 R và RStudio\nR là ngôn ngữ lập trình. Sau khi cài R, chúng ta mở lên sẽ thấy giao diện giống như một khung chat trống. Khung chat này là nơi chúng ta viết code để giao tiếp với máy tính.\n\nRStudio là một môi trường phát triển tích hợp (integrated development environment hay IDE) hay nói đơn giản là một phần mềm để viết code R hiệu quả hơn.\n\nVì vậy, chúng ta cần cài đặt riêng R (ngôn ngữ lập trình) và RStudio (IDE).\n\n1.3.1 Cài đặt R\nTruy cập https://cran.r-project.org/ và tải R cho hệ điều hành của mình.\n\n\n\n1.3.2 Cài đặt RStudio\nTruy cập https://posit.co/download/rstudio-desktop/ và tải RStudio cho hệ điều hành của mình."
  },
  {
    "objectID": "intro.html#sec-r-pkgs",
    "href": "intro.html#sec-r-pkgs",
    "title": "1  Giới thiệu",
    "section": "1.4 R packages",
    "text": "1.4 R packages\nR packages là các gói phần mềm được viết bằng ngôn ngữ lập trình R để thực hiện một số tác vụ cụ thể.\n\n1.4.1 Cài đặt R packages\n\ninstall.packages(\"readxl\")\n\n\n\n\n\n\n\nLưu ý\n\n\n\n\nCần có internet để tải và cài đặt R packages bằng lệnh install.packages().\nKhi cài đặt, tên package phải nằm trong dấu ngoặc kép \"\".\n\n\n\n\n\n1.4.2 Sử dụng R packages\nSau khi cài đặt thì package sẽ trở thành một “thư viện” trong R. Để gọi thư viện này, dùng:\n\nlibrary(readxl)\n\n\n\n\n\n\n\nLưu ý\n\n\n\n\nKhông cần internet để sử dụng library.\nKhi gọi library thì tên library không nằm trong dấu ngoặc kép nữa \"\"."
  },
  {
    "objectID": "intro.html#r-script-và-r-markdown",
    "href": "intro.html#r-script-và-r-markdown",
    "title": "1  Giới thiệu",
    "section": "1.5 R Script và R Markdown",
    "text": "1.5 R Script và R Markdown\nCác đoạn hội thoại giữa chúng ta và máy tính có thể được lưu lại bằng file R Script (.R) hoặc R Markdown (.Rmd). Gần đây có thêm Quarto (.qmd) mở rộng hơn những gì R Markdown có thể làm. Vì cách viết Quarto khá giống R Markdown, nên chúng ta sẽ tập trung vào học R Markdown cơ bản.\n\n1.5.1 R Script\nTạo R Script bằng cách vào menu File &gt; New File &gt; R Script.\nR Script là file chứa các câu lệnh R và những dòng chú thích ngắn gọn về câu lệnh (comments). Có 2 cách để comment:\n\nViết dấu # đầu dòng để xác định dòng này là comment.\nViết dấu # ở cuối dòng lệnh.\n\n\n\n\n1.5.2 R Markdown\nTạo R Markdown bằng cách vào menu File &gt; New File &gt; R Markdown....\nR Markdown là công cụ để tạo ra tài liệu tự động. Trong file R Markdown chứa code R xen kẽ với văn bản mô tả, bảng, biểu đồ… có thể xuất ra nhiều loại định dạng như .docx, .pdf, .html, .pptx.\nCấu trúc file R Markdown gồm:\n\nYAML header: nằm ở trên cùng trong và ngăn cách với phần còn lại bằng cặp dấu ---. Phần này để mô tả tiêu đề tài liệu, tác giả, ngày tháng, định dạng mong muốn\nVăn bản: phần diễn giải cho tài liệu, gồm các đề mục và chữ diễn giải viết theo ngôn ngữ markdown.\n\nĐề mục được đánh dấu bằng dấu # và các đề mục nhỏ hơn thì tăng thêm số dấu # như ##, ###.\nPhải xuống hàng 2 lần để viết hàng mới trong văn bản.\n\nĐoạn code (code chunks): là nơi để viết code và xuất ra các kết quả mong muốn. Code chunks của R được đặt trong cặp dấu:\n\n\nVí dụ có file R Markdown sau:\n\nKhi knit file R Markdown trên sẽ tạo ra file báo cáo sau với đầy đủ tiêu đề, đề mục, bảng kết quả, biểu đồ… giống như được tạo ra từ 1 chương trình soạn thảo văn bản như Word.\n\n\n\n\n\n1. Ihaka, R. & Gentleman, R. R: A Language for Data Analysis and Graphics. Journal of Computational and Graphical Statistics 5, 299–314 (1996).\n\n\n2. Ihaka, R. The R Project: A Brief History and Thoughts About the Future. (1998).\n\n\n3. Lenovo, Inc. Programming Language: What is a programming language? (2024)."
  },
  {
    "objectID": "prepare.html#file-data-đang-ở-đâu",
    "href": "prepare.html#file-data-đang-ở-đâu",
    "title": "2  Chuẩn bị",
    "section": "2.1 File data đang ở đâu?",
    "text": "2.1 File data đang ở đâu?\nBước đầu tiên chúng ta phải biết file data đang nằm ở đâu trong máy tính. Vị trí, hay địa chỉ, hay đường dẫn lưu file data trong máy tính gọi là path.\n\n2.1.1 Windows\nĐể Windows hiển thị đường dẫn trong Explorer, trên thanh menu chọn dấu ... &gt; Options.\n\nChọn tab View, tick vào ô Display the full path in the title bar.\n\nSau khi làm các bước trên, click vào title bar của Explorer sẽ thấy hiển thị đầy đủ path của file hoặc folder hiện tại như sau:\n\n\n\n\n\n\n\n\nLưu ý\n\n\n\nTrong Windows, khi copy path vào R cần sửa lại theo 1 trong 2 cách sau:\n\nSửa tất cả dấu \\ thành /:\n\nC:/Users/ongph/github/r4babies/data\n\nSửa tất cả dấu \\ thành \\\\:\n\nC:\\\\Users\\\\ongph\\\\github\\\\r4babies\\\\data\n\n\n\n\n2.1.2 MacOS\n\n\n2.1.3 Absolute path và relative path\n\n2.1.3.1 Absolute path\nTrong ví dụ trên, C:/Users/ongph/github/r4babies/data là đường dẫn tuyệt đối (absolute path). Absolute path là path đầy đủ từ đầu ổ đĩa cho đến file hay folder hiện tại.\n\n\n2.1.3.2 Relative path\nTrong folder C:/Users/ongph/github/r4babies có chứa 2 folders là /data và /analysis. Chúng ta có thể minh họa path này như sau:\nC:\n|-- Users\n    |-- ongph\n        |-- github\n            |-- r4adults\n                |-- data\n            |-- r4babies\n                |-- data\n                |-- analysis\nVí dụ chúng ta đang ở trong folder /data. Từ /data muốn hướng dẫn cho máy tính đi đến được folder /analysis có thể viết relative path như sau:\n../analysis\nTrong đó:\n\n..: đi ngược lên 1 folder, trong ví dụ này chúng ta đang ở /data, đi ngược lên 1 folder là /r4babies\n/analysis: sau khi đi ngược lên /r4babies, hướng dẫn máy tính đi tiếp tới folder /analysis\n\nTương tự, chúng ta đang ở trong folder /data nằm trong /r4babies, muốn đến folder /data nằm trong /r4adults thì viết như sau:\n../../r4adults/data\n\n\n\n2.1.4 Quy tắc đặt tên files, folders\nĐể tránh bị lỗi trong quá trình sử dụng R, nên đặt tên files, folders theo các quy tắc sau:\n\nKhông đặt tên có dấu tiếng Việt\nKhông đặt tên quá dài\nKhông đặt tên chữ viết hoa viết thường lẫn lộn, nếu cần thì chỉ đặt theo quy luật camelCase (viết hoa chữ cái đầu của các từ sau từ đầu tiên, ví dụ dataSoiHcm) hoặc PascalCase (viết hoa chữ cái đầu của tất cả các từ, ví dụ DataSoiHcm)\nKhông có khoảng trống \" \" trong tên, có thể đặt kiểu camelCase, hoặc sử dụng dấu -, _ thay thế các khoảng trống: ví dụ không dùng tên data soi HCM 2023.xlsx mà có thể đặt là dataSoiHcm2023.xlsx, hoặc data-soi-hcm-2023.xlsx, hoặc data_soi_hcm_2023.xlsx"
  },
  {
    "objectID": "prepare.html#r-project",
    "href": "prepare.html#r-project",
    "title": "2  Chuẩn bị",
    "section": "2.2 R project",
    "text": "2.2 R project\nĐể tiện quản lý, mỗi dự án phân tích nên được đặt trong 1 folder. Trong folder này chứa tất cả data, code, bảng kết quả, biểu đồ… Chúng ta sẽ dùng chức năng tạo R project của RStudio để tạo folder này.\nTrên thanh menu vào File &gt; New Project... &gt; New Directory.\n\nChọn Project Type là New Project.\n\nĐặt tên folder cho project này, và chọn đường dẫn nơi sẽ lưu project trong máy tính.\n\nTrong folder /test là một R project mới tạo này, chúng ta tạo thêm 2 folders /data và /analysis. Các thành phần trong folder này như sau:\ntest\n|-- data\n    |-- data.csv\n|-- analysis\n    |-- code.R\n    |-- analysis.Rmd\n|-- test.Rproj\n\nFolder /data: chứa tất cả data.\nFolder /analysis: chứa tất cả file R Markdown.\n\nTừ bây giờ, mỗi lần muốn phân tích cho dự án /test này, chúng ta mở file test.Rproj bằng RStudio. Tất cả các file code trong folder /analysis có thể đọc file trong folder /data bằng cách dùng relative path. Những data quan trọng không thể copy vào chung trong project thì dùng absolute path (xem lại phần nói về path ở Section 2.1.3). Ví dụ:\n\ndf &lt;- read.csv(\"../data/data.csv\")"
  },
  {
    "objectID": "prepare.html#đọc-data-vào-r",
    "href": "prepare.html#đọc-data-vào-r",
    "title": "2  Chuẩn bị",
    "section": "2.3 Đọc data vào R",
    "text": "2.3 Đọc data vào R\n\n2.3.1 Phân biệt hai loại file chính\nChúng ta có thể gặp các files data ở rất nhiều format khác nhau, như .csv, .txt, .json, .xlsx, .dta… Tuy nhiên, một cách đơn giản, có thể chia các files thành 2 loại:\n\n2.3.1.1 Text files\nLà những files khi mở bằng text editor như Notepad thì có thể đọc được các chữ trong file (human-readable). Các files như .csv, .txt, .json đều là text files. Trong R đã có sẵn những functions để đọc được hầu hết các text files.\n\n\n\n\n\n\n\n\n\n\nFigure 2.1: File .csv và .json khi mở bằng Notepad\n\n\n\n\n2.3.1.2 Binary files\nLà những files khi mở bằng text editor như Notepad thì không đọc được các chữ trong file. Các files như .xlsx, .dta đều là binary files. Binary files cần được mở bằng các phần mềm chuyên dụng, ví dụ dùng Excel để mở file .xlsx thì mới đọc được dưới dạng chữ human-readable. Bản thân R không đọc được các loại file này, nhưng chúng ta có thể cài đặt và sử dụng các R packages để đọc binary files.\n\n\n\n\n\n\n\n\n\n\nFigure 2.2: File .xlsx và .dta khi mở bằng Notepad\n\n\n\n\n\n2.3.2 Đọc text files vào R\n\n2.3.2.1 read.table()\nLệnh read.table() là lệnh chung để đọc tất cả data dạng bảng.\n\nread.table(file, header = FALSE, sep = \"\")\n\nDùng ?read.table để đọc thêm hướng dẫn sử dụng và các arguments khác của lệnh. Ở đây chúng ta tìm hiểu một số arguments thường dùng:\n\nfile: path của file data đầu vào, có thể dùng absolute path hoặc relative path (xem Section 2.1.3).\nheader: dòng đầu tiên của file data có phải là tên cột không. Nếu header = TRUE thì R sẽ lấy các giá trị trong hàng đầu tiên làm tên cột. Nếu header = FALSE thì R sẽ tự đặt tên cột là V1, V2, V3…\n\n\n\n\n\n\n\nLưu ý\n\n\n\nTrong R, TRUE có thể viết tắt là T và FALSE có thể viết tắt là F.\n\n\n\nsep: các cột trong text file ngăn cách nhau bằng kí tự gì. Ví dụ file life-exp.csv nếu chúng ta mở bằng Notepad sẽ thấy các cột ngăn cách nhau bằng dấu ,.\n\n\nChúng ta đọc file life-exp.csv vào R như sau:\n\ndf &lt;- read.table(file = \"data/life-exp.csv\", header = F, sep = \",\")\nhead(df)\n\n           V1   V2         V3               V4              V5            V6\n1     Country Year     Status Life expectancy  Adult Mortality infant deaths\n2 Afghanistan 2015 Developing             65.0             263            62\n3 Afghanistan 2014 Developing             59.9             271            64\n4 Afghanistan 2013 Developing             59.9             268            66\n5 Afghanistan 2012 Developing             59.5             272            69\n6 Afghanistan 2011 Developing             59.2             275            71\n       V7                     V8          V9      V10   V11                V12\n1 Alcohol percentage expenditure Hepatitis B Measles   BMI  under-five deaths \n2    0.01            71.27962362          65     1154  19.1                 83\n3    0.01            73.52358168          62      492  18.6                 86\n4    0.01            73.21924272          64      430  18.1                 89\n5    0.01             78.1842153          67     2787  17.6                 93\n6    0.01            7.097108703          68     3013  17.2                 97\n    V13               V14         V15       V16        V17         V18\n1 Polio Total expenditure Diphtheria   HIV/AIDS        GDP  Population\n2     6              8.16          65       0.1  584.25921 3.3736494e7\n3    58              8.18          62       0.1 612.696514    327582.0\n4    62              8.13          64       0.1 631.744976 3.1731688e7\n5    67              8.52          67       0.1    669.959  3.696958e6\n6    68              7.87          68       0.1  63.537231  2.978599e6\n                    V19                 V20                             V21\n1  thinness  1-19 years  thinness 5-9 years Income composition of resources\n2                  17.2                17.3                           0.479\n3                  17.5                17.5                           0.476\n4                  17.7                17.7                            0.47\n5                  17.9                18.0                           0.463\n6                  18.2                18.2                           0.454\n        V22\n1 Schooling\n2      10.1\n3      10.0\n4       9.9\n5       9.8\n6       9.5\n\n\nNếu đọc với argument header = T:\n\ndf &lt;- read.table(file = \"data/life-exp.csv\", header = T, sep = \",\")\nhead(df)\n\n      Country Year     Status Life.expectancy Adult.Mortality infant.deaths\n1 Afghanistan 2015 Developing            65.0             263            62\n2 Afghanistan 2014 Developing            59.9             271            64\n3 Afghanistan 2013 Developing            59.9             268            66\n4 Afghanistan 2012 Developing            59.5             272            69\n5 Afghanistan 2011 Developing            59.2             275            71\n6 Afghanistan 2010 Developing            58.8             279            74\n  Alcohol percentage.expenditure Hepatitis.B Measles  BMI under.five.deaths\n1    0.01              71.279624          65    1154 19.1                83\n2    0.01              73.523582          62     492 18.6                86\n3    0.01              73.219243          64     430 18.1                89\n4    0.01              78.184215          67    2787 17.6                93\n5    0.01               7.097109          68    3013 17.2                97\n6    0.01              79.679367          66    1989 16.7               102\n  Polio Total.expenditure Diphtheria HIV.AIDS       GDP Population\n1     6              8.16         65      0.1 584.25921   33736494\n2    58              8.18         62      0.1 612.69651     327582\n3    62              8.13         64      0.1 631.74498   31731688\n4    67              8.52         67      0.1 669.95900    3696958\n5    68              7.87         68      0.1  63.53723    2978599\n6    66              9.20         66      0.1 553.32894    2883167\n  thinness..1.19.years thinness.5.9.years Income.composition.of.resources\n1                 17.2               17.3                           0.479\n2                 17.5               17.5                           0.476\n3                 17.7               17.7                           0.470\n4                 17.9               18.0                           0.463\n5                 18.2               18.2                           0.454\n6                 18.4               18.4                           0.448\n  Schooling\n1      10.1\n2      10.0\n3       9.9\n4       9.8\n5       9.5\n6       9.2\n\n\n\n\n\n\n\n\nNote\n\n\n\nDấu &lt;- dùng để gán kết quả của một function cho một đối tượng (object) trong R. Nếu chỉ viết read.table(file = \"data/life-exp.csv\", header = T, sep = \",\") thì R không lưu lại kết quả sau khi đọc mà chỉ hiển thị ra màn hình.\nSau khi gán kết quả đọc của read.table() vào object df, dùng lệnh head(df) để hiển thị 6 dòng đầu tiên của bảng.\n\n\n\n\n2.3.2.2 read.csv()\nFile .csv là một định dạng thông dụng, tên đầy đủ là comma-separated values nghĩa là các giá trị được ngăn cách bởi dấu , (comma). Trong R có sẵn lệnh read.csv() để đọc file .csv.\n\nread.csv(file, header = TRUE, sep = \",\")\n\nCác arguments của read.csv() cũng tương tự read.table(), nhưng đã được quy định cho phù hợp với file .csv. Vì vậy, thường chỉ cần đặt path vào argument file là đủ.\n\ndf &lt;- read.csv(file = \"data/life-exp.csv\")\nhead(df)\n\n      Country Year     Status Life.expectancy Adult.Mortality infant.deaths\n1 Afghanistan 2015 Developing            65.0             263            62\n2 Afghanistan 2014 Developing            59.9             271            64\n3 Afghanistan 2013 Developing            59.9             268            66\n4 Afghanistan 2012 Developing            59.5             272            69\n5 Afghanistan 2011 Developing            59.2             275            71\n6 Afghanistan 2010 Developing            58.8             279            74\n  Alcohol percentage.expenditure Hepatitis.B Measles  BMI under.five.deaths\n1    0.01              71.279624          65    1154 19.1                83\n2    0.01              73.523582          62     492 18.6                86\n3    0.01              73.219243          64     430 18.1                89\n4    0.01              78.184215          67    2787 17.6                93\n5    0.01               7.097109          68    3013 17.2                97\n6    0.01              79.679367          66    1989 16.7               102\n  Polio Total.expenditure Diphtheria HIV.AIDS       GDP Population\n1     6              8.16         65      0.1 584.25921   33736494\n2    58              8.18         62      0.1 612.69651     327582\n3    62              8.13         64      0.1 631.74498   31731688\n4    67              8.52         67      0.1 669.95900    3696958\n5    68              7.87         68      0.1  63.53723    2978599\n6    66              9.20         66      0.1 553.32894    2883167\n  thinness..1.19.years thinness.5.9.years Income.composition.of.resources\n1                 17.2               17.3                           0.479\n2                 17.5               17.5                           0.476\n3                 17.7               17.7                           0.470\n4                 17.9               18.0                           0.463\n5                 18.2               18.2                           0.454\n6                 18.4               18.4                           0.448\n  Schooling\n1      10.1\n2      10.0\n3       9.9\n4       9.8\n5       9.5\n6       9.2\n\n\n\n\n\n2.3.3 Đọc binary files vào R\n\n2.3.3.1 read_excel()\nDùng lệnh read_excel() trong package readxl để đọc các file excel (đuôi .xls hay .xlsx) . Xem lại cách cài đặt và sử dụng R packages tại Section 1.4.\n\nread_excel(path, sheet = NULL, col_names = TRUE)\n\nChúng ta có thể thấy tên các arguments của read_excel() hoàn toàn khác với read.table() hay read.csv().\n\npath: path của file data đầu vào.\nsheet: tên hoặc số thứ tự của sheet sẽ đọc vào R, nếu file có nhiều sheets.\ncol_names: dòng đầu tiên của file data có phải là tên cột không, giống argument header của read.table().\n\n\nlibrary(readxl)\ndf &lt;- read_excel(path = \"data/gdp-capita.xlsx\", sheet = 1)\nhead(df)\n\n# A tibble: 6 × 65\n  `Country Name` `Country Code` `1960` `1961` `1962` `1963` `1964` `1965` `1966`\n  &lt;chr&gt;          &lt;chr&gt;           &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Aruba          ABW              NA     NA     NA     NA     NA      NA     NA \n2 Africa Easter… AFE             141.   144.   149.   157.   167.    178.   187.\n3 Afghanistan    AFG              62.4   62.4   61.0   82.0   85.5   105.   143.\n4 Africa Wester… AFW             107.   112.   118.   122.   131.    137.   143.\n5 Angola         AGO              NA     NA     NA     NA     NA      NA     NA \n6 Albania        ALB              NA     NA     NA     NA     NA      NA     NA \n# ℹ 56 more variables: `1967` &lt;dbl&gt;, `1968` &lt;dbl&gt;, `1969` &lt;dbl&gt;, `1970` &lt;dbl&gt;,\n#   `1971` &lt;dbl&gt;, `1972` &lt;dbl&gt;, `1973` &lt;dbl&gt;, `1974` &lt;dbl&gt;, `1975` &lt;dbl&gt;,\n#   `1976` &lt;dbl&gt;, `1977` &lt;dbl&gt;, `1978` &lt;dbl&gt;, `1979` &lt;dbl&gt;, `1980` &lt;dbl&gt;,\n#   `1981` &lt;dbl&gt;, `1982` &lt;dbl&gt;, `1983` &lt;dbl&gt;, `1984` &lt;dbl&gt;, `1985` &lt;dbl&gt;,\n#   `1986` &lt;dbl&gt;, `1987` &lt;dbl&gt;, `1988` &lt;dbl&gt;, `1989` &lt;dbl&gt;, `1990` &lt;dbl&gt;,\n#   `1991` &lt;dbl&gt;, `1992` &lt;dbl&gt;, `1993` &lt;dbl&gt;, `1994` &lt;dbl&gt;, `1995` &lt;dbl&gt;,\n#   `1996` &lt;dbl&gt;, `1997` &lt;dbl&gt;, `1998` &lt;dbl&gt;, `1999` &lt;dbl&gt;, `2000` &lt;dbl&gt;, …\n\n\n\n\n\n\n\n\nLưu ý\n\n\n\nMột lỗi thường gặp với file excel là R đọc các file có merged cells không tốt. Vì vậy khi nhập data, nên tránh làm merged cells.\n\n\n\n\n2.3.3.2 File SPSS, Stata, SAS\nDùng các lệnh read_sav() (SPSS), read_dta() (Stata) và read_sas() (SAS) trong package haven.\n\nlibrary(haven)\ndf &lt;- read_dta(file = \"data/linelist-raw.dta\")\nhead(df)\n\n# A tibble: 6 × 28\n  case_id generation infection_date      date_onset hosp_date          \n  &lt;chr&gt;        &lt;dbl&gt; &lt;dttm&gt;              &lt;chr&gt;      &lt;dttm&gt;             \n1 5fe599           4 2014-05-08 00:00:00 2014-05-13 2014-05-15 00:00:00\n2 8689b7           4 NA                  2014-05-13 2014-05-14 00:00:00\n3 11f8ea           2 NA                  2014-05-16 2014-05-18 00:00:00\n4 b8812a           3 2014-05-04 00:00:00 2014-05-18 2014-05-20 00:00:00\n5 893f25           3 2014-05-18 00:00:00 2014-05-21 2014-05-22 00:00:00\n6 be99c8           3 2014-05-03 00:00:00 2014-05-22 2014-05-23 00:00:00\n# ℹ 23 more variables: date_of_outcome &lt;dttm&gt;, outcome &lt;chr&gt;, gender &lt;chr&gt;,\n#   hospital &lt;chr&gt;, lon &lt;dbl&gt;, lat &lt;dbl&gt;, infector &lt;chr&gt;, source &lt;chr&gt;,\n#   age &lt;chr&gt;, age_unit &lt;chr&gt;, row_num &lt;dbl&gt;, wt_kg &lt;dbl&gt;, ht_cm &lt;dbl&gt;,\n#   ct_blood &lt;dbl&gt;, fever &lt;chr&gt;, chills &lt;chr&gt;, cough &lt;chr&gt;, aches &lt;chr&gt;,\n#   vomit &lt;chr&gt;, temp &lt;dbl&gt;, time_admission &lt;chr&gt;, merged_header &lt;chr&gt;,\n#   x28 &lt;chr&gt;"
  },
  {
    "objectID": "clean.html#data-gọn-gàng-tidy-data",
    "href": "clean.html#data-gọn-gàng-tidy-data",
    "title": "3  Làm sạch",
    "section": "3.1 Data gọn gàng (tidy data)",
    "text": "3.1 Data gọn gàng (tidy data)\nTidy data1\n\n\n\n\n1. Wickham, H. Tidy Data. Journal of Statistical Software 59, (2014)."
  },
  {
    "objectID": "viz-practice.html#biểu-đồ-mẫu",
    "href": "viz-practice.html#biểu-đồ-mẫu",
    "title": "6  Thực hành trực quan hóa",
    "section": "6.1 Biểu đồ mẫu",
    "text": "6.1 Biểu đồ mẫu\nBiểu đồ dưới đây nằm trong bài báo “Mapping routine measles vaccination in low- and middle-income countries”1 được đăng trên tạp chí Nature (IF 2022 = 64.8). Biểu đồ thể hiện tương quan giữa sự thay đổi bất bình đẳng địa lý và sự thay đổi độ phủ vaccine MCV1 của các quốc gia thu nhập thấp và trung bình từ năm 2000 đến năm 2019.\n\nChúng ta sẽ vẽ lại biểu đồ này bằng ggplot. Để đơn giản, chúng ta bỏ bớt một số chi tiết và sẽ vẽ biểu đồ sau:\n\n\n6.1.1 Các bước thực hành\nĐầu tiên cần gọi library ggplot để vẽ biểu đồ và ggsci cho bảng màu.\n\nlibrary(ggplot2)\nlibrary(ggsci)\n\nNhìn vào biểu đồ, chúng ta thấy trục x (nằm ngang) là sự thay đổi độ phủ vaccine, trục y (nằm dọc) là sự thay đổi bất bình đẳng địa lý. Có 10 quốc gia được hiển thị tên là Angola, Papua New Guinea, Pakistan, Chad, Ethiopia, Kenya, Nigeria, Liberia, Burkina Faso, India.\nVậy chúng ta cần một data frame có ít nhất 3 cột: (1) tên quốc gia, (2) sự thay đổi độ phủ vaccine, (3) sự thay đổi bất bình đẳng địa lý.\n\ncountry &lt;- c(\"Angola\", \"Papua New Guinea\", \"Pakistan\", \"Chad\", \"Ethiopia\", \"Kenya\", \"Nigeria\", \"Liberia\", \"Burkina Faso\", \"India\")\ncoverage &lt;- c(-0.1, -0.35, 0.12, 0.14, 0.32, 0.07, 0.2, 0.18, 0.3, 0.35)\ninequality &lt;- c(0.1, 0.08, 0.05, 0.01, 0.005, -0.06, -0.07, -0.11, -0.13, -0.16)\ndf_plot &lt;- data.frame(country, coverage, inequality)\ndf_plot\n\n            country coverage inequality\n1            Angola    -0.10      0.100\n2  Papua New Guinea    -0.35      0.080\n3          Pakistan     0.12      0.050\n4              Chad     0.14      0.010\n5          Ethiopia     0.32      0.005\n6             Kenya     0.07     -0.060\n7           Nigeria     0.20     -0.070\n8           Liberia     0.18     -0.110\n9      Burkina Faso     0.30     -0.130\n10            India     0.35     -0.160\n\n\nChúng ta sẽ vẽ biểu đồ cho 10 quốc gia này trước. Dạng biểu đồ scatterplot trong ggplot tương ứng với geom_point().\n\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point()\n\n\n\n\nĐể hiển thị tên quốc gia, chúng ta thêm geom_text() với label là tên nước (country).\n\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point() +\n  geom_text(aes(label = country))\n\n\n\n\nHiện giờ chữ đang đè lên các điểm, chúng ta điều chỉnh vị trí của chữ bằng arguments hjust và vjust của geom_text(). Một số tên nước bị cắt mất như Papua New Guinea, chúng ta điều chỉnh lại giới hạn hiển thị của các trục tọa độ bằng xlim(), ylim() để hiển thị lại đầy đủ.\n\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point() +\n  geom_text(aes(label = country), hjust = -0.15, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1))\n\n\n\n\nCác điểm trong biểu đồ gốc có màu sắc và kích thước to nhỏ khác nhau, vậy trong data frame cần có thêm 1 cột màu sắc và 1 cột kích thước.\n\ndf_plot$size &lt;- c(1.1, 0.6, 3, 1, 2, 1.1, 3, 0.7, 1.1, 8)\ndf_plot$color &lt;- c(1, 2, 3, 1, 1, 1, 1, 1, 1, 3)\ndf_plot\n\n            country coverage inequality size color\n1            Angola    -0.10      0.100  1.1     1\n2  Papua New Guinea    -0.35      0.080  0.6     2\n3          Pakistan     0.12      0.050  3.0     3\n4              Chad     0.14      0.010  1.0     1\n5          Ethiopia     0.32      0.005  2.0     1\n6             Kenya     0.07     -0.060  1.1     1\n7           Nigeria     0.20     -0.070  3.0     1\n8           Liberia     0.18     -0.110  0.7     1\n9      Burkina Faso     0.30     -0.130  1.1     1\n10            India     0.35     -0.160  8.0     3\n\n\nBây giờ chúng ta có thể thêm màu sắc và kích thước vào geom_point().\n\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point(aes(size = size, color = color)) +\n  geom_text(aes(label = country), hjust = -0.15, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1))\n\n\n\n\nCác quốc gia chính đã được vẽ xong, chúng ta cần có các điểm khác trên biểu đồ mà không có tên quốc gia. Có thể tạo ra các điểm ngẫu nhiên như vậy bằng R.\n\nset.seed(123)\nnp &lt;- 50\nrd &lt;- data.frame(country = rep(\"\", np),\n                 coverage = rnorm(n = np, mean = 0.1, sd = 0.12),\n                 inequality = rnorm(n = np, mean = -0.05, sd = 0.04),\n                 size = rnorm(n = np, mean = 1, sd = 0.4),\n                 color = sample(1:6, np, replace = T))\nhead(rd)\n\n  country   coverage   inequality      size color\n1         0.03274292 -0.039867259 0.7158374     2\n2         0.07237870 -0.051141870 1.1027535     2\n3         0.28704500 -0.051714818 0.9013232     1\n4         0.10846101  0.004744091 0.8609830     2\n5         0.11551453 -0.059030839 0.6193526     1\n6         0.30580780  0.010658824 0.9819889     5\n\n\n\nset.seed(123): dùng để cố định cách tạo ra các điểm ngẫu nhiên.\nnp &lt;- 50: tạo ra 50 điểm ngẫu nhiên.\ncountry = rep(\"\", np): các điểm này không có tên quốc gia.\ncoverage = rnorm(n = np, mean = 0.1, sd = 0.12): sự thay đổi độ phủ vaccine (giá trị trên trục x) của các điểm này là số thực được tạo ra ngẫu nhiên theo phân phối bình thường với trung bình là 0.1 và độ lệch chuẩn là 0.12.\ninequality = rnorm(n = np, mean = -0.05, sd = 0.04): sự thay đổi bất bình đẳng địa lý (giá trị trên trục y) của các điểm này là số thực được tạo ra ngẫu nhiên theo phân phối bình thường với trung bình là -0.05 và độ lệch chuẩn là 0.04.\nsize = rnorm(n = np, mean = 1, sd = 0.4): kích thước của các điểm này là số thực được tạo ra ngẫu nhiên theo phân phối bình thường với trung bình là 1 và độ lệch chuẩn là 0.4.\ncolor = sample(1:6, np, replace = T): màu sắc là số nguyên ngẫu nhiên từ 1 đến 6.\n\nBây giờ chúng ta ghép data frame rd này với data frame của biểu đồ df_plot. Cột màu sắc được đưa về dạng factor để hiển thị màu. Sau đó dùng code ggplot trên để vẽ.\n\ndf_plot &lt;- rbind(df_plot, rd)\ndf_plot$color &lt;- factor(df_plot$color)\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point(aes(size = size, color = color)) +\n  geom_text(aes(label = country), hjust = -0.15, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1))\n\n\n\n\n\n\n6.1.2 Kết quả\nBiểu đồ được tạo ra đã tương đối giống biểu đồ gốc. Chúng ta có thể thêm các đường thẳng x = 0, y = 0, chọn bảng màu, chỉnh lại kích thước các điểm, chọn lại theme cho biểu đồ để nhìn giống biểu đồ gốc hơn.\n\nggplot(df_plot, aes(x = coverage, y = inequality)) +\n  geom_point(aes(size = size, color = color), alpha = 0.8) +\n  geom_text(aes(label = country), hjust = -0.15, vjust = 0.2) +\n  xlim(c(-0.35, 0.55)) +\n  ylim(c(-0.17, 0.1)) +\n  geom_vline(xintercept = 0) +\n  geom_hline(yintercept = 0) +\n  scale_color_npg() +\n  scale_size_continuous(range = c(0, 10)) +\n  theme_classic() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nBài tập\n\n\n\nThay đổi tiêu đề của các trục tọa độ và chú thích kích thước điểm, màu cho giống với biểu đồ mẫu. Đặt phần chú thích ở trên biểu đồ giống như biểu đồ mẫu.\n\n\n\n\n\n\n1. Mapping routine measles vaccination in low- and middle-income countries. Nature 589, 415–419 (2020)."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "1. Ihaka, R. The R\nProject: A Brief History and Thoughts About the Future.\n(1998).\n\n\n2. Ihaka, R. & Gentleman, R. R: A Language for\nData Analysis and Graphics. Journal of Computational and\nGraphical Statistics 5, 299–314 (1996).\n\n\n3. Lenovo, Inc. Programming\nLanguage: What is a programming language? (2024).\n\n\n4. Wickham, H. Tidy Data. Journal\nof Statistical Software 59, (2014).\n\n\n5. Mapping routine\nmeasles vaccination in low- and middle-income countries.\nNature 589, 415–419 (2020)."
  }
]