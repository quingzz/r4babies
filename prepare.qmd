# Chuẩn bị làm việc

::: callout-tip
# Mục tiêu

1.  Biết cách tìm path tới nơi lưu file data
2.  Biết cách đọc data vào R
3.  Hiểu cấu trúc tidy data
:::

## File data đang ở đâu?

Bước đầu tiên chúng ta phải biết file data đang nằm ở đâu trong máy tính. Vị trí, hay địa chỉ, hay đường dẫn lưu file data trong máy tính gọi là ***path***.

### Windows

Để Windows hiển thị đường dẫn trong Explorer, trên thanh menu chọn dấu `...` \> `Options`.

![](img/prepare/path-win-option.png)

Chọn tab `View`, tick vào ô `Display the full path in the title bar`.

![](img/prepare/path-win-full.png){width="60%"}

Sau khi làm các bước trên, click vào title bar của Explorer sẽ thấy hiển thị đầy đủ path của file hoặc folder hiện tại như sau:

![](img/prepare/path-win-1.png)

![](img/prepare/path-win-2.png)

::: callout-important
# Lưu ý

Trong Windows, khi copy path vào R cần sửa lại theo 1 trong 2 cách sau:

1.  Sửa tất cả dấu `\` thành `/`:

```         
C:/Users/ongph/github/r4babies/data
```

2.  Sửa tất cả dấu `\` thành `\\`:

```         
C:\\Users\\ongph\\github\\r4babies\\data
```
:::

### MacOS

### Absolute path và relative path

#### Absolute path

Trong ví dụ trên, `C:/Users/ongph/github/r4babies/data` là đường dẫn tuyệt đối (***absolute path***). Absolute path là path đầy đủ từ đầu ổ đĩa cho đến file hay folder hiện tại.

#### Relative path

Trong folder `C:/Users/ongph/github/r4babies` có chứa 2 folders là `/data` và `/analysis`. Chúng ta có thể minh họa path này như sau:

```         
C:
|-- Users
    |-- ongph
        |-- github
            |-- r4adults
                |-- data
            |-- r4babies
                |-- data
                |-- analysis
```

Ví dụ chúng ta đang ở trong folder `/data`. Từ `/data` muốn hướng dẫn cho máy tính đi đến được folder `/analysis` có thể viết ***relative path*** như sau:

```         
../analysis
```

Trong đó:

-   `..`: đi ngược lên 1 folder, trong ví dụ này chúng ta đang ở `/data`, đi ngược lên 1 folder là `/r4babies`
-   `/analysis`: sau khi đi ngược lên `/r4babies`, hướng dẫn máy tính đi tiếp tới folder `/analysis`

Tương tự, chúng ta đang ở trong folder `/data` nằm trong `/r4babies`, muốn đến folder `/data` nằm trong `/r4adults` thì viết như sau:

```         
../../r4adults/data
```

### Quy tắc đặt tên files, folders

Để tránh bị lỗi trong quá trình sử dụng R, nên đặt tên files, folders theo các quy tắc sau:

-   Không đặt tên có dấu tiếng Việt
-   Không đặt tên quá dài
-   Không đặt tên chữ viết hoa viết thường lẫn lộn, nếu cần thì chỉ đặt theo quy luật camelCase (viết hoa chữ cái đầu của các từ sau từ đầu tiên, ví dụ `dataSoiHcm`) hoặc PascalCase (viết hoa chữ cái đầu của tất cả các từ, ví dụ `DataSoiHcm`)
-   Không có khoảng trống `" "` trong tên, có thể đặt kiểu camelCase, hoặc sử dụng dấu `-`, `_` thay thế các khoảng trống: ví dụ không dùng tên `data soi HCM 2023.xlsx` mà có thể đặt là `dataSoiHcm2023.xlsx`, hoặc `data-soi-hcm-2023.xlsx`, hoặc `data_soi_hcm_2023.xlsx`

## R project

Để tiện quản lý, mỗi dự án phân tích nên được đặt trong 1 folder. Trong folder này chứa tất cả data, code, bảng kết quả, biểu đồ... Chúng ta sẽ dùng chức năng tạo R project của RStudio để tạo folder này.

Trên thanh menu vào `File` \> `New Project...` \> `New Directory`.

![](img/prepare/new-prj-1.png)

Chọn Project Type là `New Project`.

![](img/prepare/new-prj-2.png)

Đặt tên folder cho project này, và chọn đường dẫn nơi sẽ lưu project trong máy tính.

![](img/prepare/new-prj-3.png)

Trong folder `/test` là một R project mới tạo này, chúng ta tạo thêm 2 folders `/data` và `/analysis`. Các thành phần trong folder này như sau:

```         
test
|-- data
    |-- data.csv
|-- analysis
    |-- code.R
    |-- analysis.Rmd
|-- test.Rproj
```

-   Folder `/data`: chứa tất cả data
-   Folder `/analysis`: chứa tất cả file code, markdown

Từ bây giờ, mỗi lần muốn phân tích cho dự án `/test` này, chúng ta mở file `test.Rproj` bằng RStudio. Tất cả các file code trong folder `/analysis` có thể đọc file trong folder `/data` bằng cách dùng relative path. Ví dụ:

```{r, eval = F}
df <- read.csv("../data/data.csv")
```

## Đọc data vào R

### Phân biệt hai loại file chính

Chúng ta có thể gặp các files data ở rất nhiều format khác nhau, như `.csv`, `.txt`, `.json`, `.xlsx`, `.dta`... Tuy nhiên, một cách đơn giản, có thể chia các files thành 2 loại:

#### Text files

Là những files khi mở bằng text editor như Notepad thì có thể đọc được các chữ trong file (human-readable). Các files như `.csv`, `.txt`, `.json` đều là text files. Trong R đã có sẵn những functions để đọc được hầu hết các text files.

::: {#fig-text-files layout-ncol="2"}
![](img/prepare/csv.png)

![](img/prepare/json.png)

File `.csv` và `.json` khi mở bằng Notepad
:::

#### Binary files

Là những files khi mở bằng text editor như Notepad thì không đọc được các chữ trong file. Các files như `.xlsx`, `.dta` đều là binary files. Binary files cần được mở bằng các phần mềm chuyên dụng, ví dụ dùng Excel để mở file `.xlsx` thì mới đọc được dưới dạng chữ human-readable. Bản thân R không đọc được các loại file này, nhưng chúng ta có thể cài đặt và sử dụng các R packages để đọc binary files.

::: {#fig-binary-files layout-ncol="2"}
![](img/prepare/excel.png)

![](img/prepare/dta.png)

File `.xlsx` và `.dta` khi mở bằng Notepad
:::

### Đọc text files vào R

### Đọc binary files vào R

#### File excel

Xem lại cách cài đặt và sử dụng R packages tại @sec-r-pkgs.

```{r}
library(readxl)
```

Vấn đề với file excel: merged cells

## Data gọn gàng (tidy data)

Tidy data[@wickham2014]
